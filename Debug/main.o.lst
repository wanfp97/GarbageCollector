   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "main.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_GPIO_SetOutputHigh:
  25              	.LFB177:
  26              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** {
  27              	 .loc 1 257 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 258:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  45              	 .loc 1 260 0
  46 000c FB78     	 ldrb r3,[r7,#3]
  47 000e 0122     	 movs r2,#1
  48 0010 9A40     	 lsls r2,r2,r3
  49 0012 7B68     	 ldr r3,[r7,#4]
  50 0014 5A60     	 str r2,[r3,#4]
 261:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** }
  51              	 .loc 1 261 0
  52 0016 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0018 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001a 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 001e 7047     	 bx lr
  64              	 .cfi_endproc
  65              	.LFE177:
  67              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  68              	 .align 2
  69              	 .thumb
  70              	 .thumb_func
  72              	XMC_GPIO_SetOutputLow:
  73              	.LFB178:
 262:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** {
  74              	 .loc 1 283 0
  75              	 .cfi_startproc
  76              	 
  77              	 
  78              	 
  79 0000 80B4     	 push {r7}
  80              	.LCFI6:
  81              	 .cfi_def_cfa_offset 4
  82              	 .cfi_offset 7,-4
  83 0002 83B0     	 sub sp,sp,#12
  84              	.LCFI7:
  85              	 .cfi_def_cfa_offset 16
  86 0004 00AF     	 add r7,sp,#0
  87              	.LCFI8:
  88              	 .cfi_def_cfa_register 7
  89 0006 7860     	 str r0,[r7,#4]
  90 0008 0B46     	 mov r3,r1
  91 000a FB70     	 strb r3,[r7,#3]
 284:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  92              	 .loc 1 286 0
  93 000c FB78     	 ldrb r3,[r7,#3]
  94 000e 4FF48032 	 mov r2,#65536
  95 0012 9A40     	 lsls r2,r2,r3
  96 0014 7B68     	 ldr r3,[r7,#4]
  97 0016 5A60     	 str r2,[r3,#4]
 287:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** }
  98              	 .loc 1 287 0
  99 0018 0C37     	 adds r7,r7,#12
 100              	.LCFI9:
 101              	 .cfi_def_cfa_offset 4
 102 001a BD46     	 mov sp,r7
 103              	.LCFI10:
 104              	 .cfi_def_cfa_register 13
 105              	 
 106 001c 5DF8047B 	 ldr r7,[sp],#4
 107              	.LCFI11:
 108              	 .cfi_restore 7
 109              	 .cfi_def_cfa_offset 0
 110 0020 7047     	 bx lr
 111              	 .cfi_endproc
 112              	.LFE178:
 114 0022 00BF     	 .section .text.XMC_GPIO_GetInput,"ax",%progbits
 115              	 .align 2
 116              	 .thumb
 117              	 .thumb_func
 119              	XMC_GPIO_GetInput:
 120              	.LFB180:
 288:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 289:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 290:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 291:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 292:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 293:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 294:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 295:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 297:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 298:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 300:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 301:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 302:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 303:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 304:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 305:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 306:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 307:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 308:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 309:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** {
 310:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 311:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 312:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 313:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** }
 314:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 315:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 316:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 317:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 318:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 319:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 320:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 321:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 323:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 324:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 326:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 327:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 328:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 329:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 330:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 331:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 332:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 333:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 334:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** {
 121              	 .loc 1 334 0
 122              	 .cfi_startproc
 123              	 
 124              	 
 125              	 
 126 0000 80B4     	 push {r7}
 127              	.LCFI12:
 128              	 .cfi_def_cfa_offset 4
 129              	 .cfi_offset 7,-4
 130 0002 83B0     	 sub sp,sp,#12
 131              	.LCFI13:
 132              	 .cfi_def_cfa_offset 16
 133 0004 00AF     	 add r7,sp,#0
 134              	.LCFI14:
 135              	 .cfi_def_cfa_register 7
 136 0006 7860     	 str r0,[r7,#4]
 137 0008 0B46     	 mov r3,r1
 138 000a FB70     	 strb r3,[r7,#3]
 335:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 336:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** 
 337:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
 139              	 .loc 1 337 0
 140 000c 7B68     	 ldr r3,[r7,#4]
 141 000e 5A6A     	 ldr r2,[r3,#36]
 142 0010 FB78     	 ldrb r3,[r7,#3]
 143 0012 22FA03F3 	 lsr r3,r2,r3
 144 0016 03F00103 	 and r3,r3,#1
 338:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_gpio.h **** }
 145              	 .loc 1 338 0
 146 001a 1846     	 mov r0,r3
 147 001c 0C37     	 adds r7,r7,#12
 148              	.LCFI15:
 149              	 .cfi_def_cfa_offset 4
 150 001e BD46     	 mov sp,r7
 151              	.LCFI16:
 152              	 .cfi_def_cfa_register 13
 153              	 
 154 0020 5DF8047B 	 ldr r7,[sp],#4
 155              	.LCFI17:
 156              	 .cfi_restore 7
 157              	 .cfi_def_cfa_offset 0
 158 0024 7047     	 bx lr
 159              	 .cfi_endproc
 160              	.LFE180:
 162 0026 00BF     	 .section .text.XMC_SPI_CH_SetBitOrderLsbFirst,"ax",%progbits
 163              	 .align 2
 164              	 .thumb
 165              	 .thumb_func
 167              	XMC_SPI_CH_SetBitOrderLsbFirst:
 168              	.LFB249:
 169              	 .file 2 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc/xmc_spi.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @file xmc_spi.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @date 2019-05-07
   4:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Initial
  41:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *   
  42:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-05-20:
  43:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Documentation improved <br>
  44:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetSlaveSelectDelay(), XMC_SPI_CH_TriggerServiceRequest() and 
  45:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *       XMC_SPI_CH_SelectInterruptNodePointer() <br>
  46:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetInterwordDelaySCLK() <br>
  47:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
  48:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-06-20:
  49:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  50:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
  51:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-08-24:
  52:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_SPI_CH_DisableDelayCompensation()
  53:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *       XMC_SPI_CH_EnableDelayCompensation() <br>
  54:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
  55:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-08-27:
  56:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added APIs for external input for BRG configuration:XMC_SPI_CH_ConfigExternalInputSignalTo
  57:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
  58:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-09-01:
  59:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Modified XMC_SPI_CH_SetInputSource() for avoiding complete DXCR register overwriting. <br>
  60:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Modified XMC_SPI_CH_EVENT_t enum for supporting XMC_SPI_CH_EnableEvent() and XMC_SPI_CH_Di
  61:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *       for supporting multiple events configuration <br>
  62:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
  63:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-09-08:
  64:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Adding API for configuring the receiving clock phase in the slave:XMC_SPI_CH_DataLatchedIn
  65:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
  66:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 2016-04-10:
  67:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added an API for configuring the transmit mode:XMC_SPI_CH_SetTransmitMode() <br>
  68:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
  69:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 2016-05-20:
  70:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_EnableDataTransmission() and XMC_SPI_CH_DisableDataTransmission()
  71:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  72:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 2019-03-30:
  73:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Fix XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX macro value
  74:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  75:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 2019-05-07:
  76:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added normal_divider_mode to XMC_SPI_CH_CONFIG_t configuration structure.
  77:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *       It selects normal divider mode for baudrate generator instead of default fractional divide
  78:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetBaudrateEx()
  79:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
  80:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @endcond 
  81:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
  82:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
  83:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
  84:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** #ifndef XMC_SPI_H
  85:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI_H
  86:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
  87:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
  88:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * HEADER FILES
  89:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
  90:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** #include "xmc_usic.h"
  91:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
  92:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
  93:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @addtogroup XMClib XMC Peripheral Library
  94:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @{
  95:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
  96:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
  97:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
  98:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @addtogroup SPI
  99:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @brief Synchronous serial channel driver for SPI-like communication.
 100:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 101:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * The SPI driver uses Universal Serial Interface Channel(USIC) module. 
 102:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * The USIC module supports multiple data lines for SPI communication. \n
 103:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Full duplex communication with 2 separate lines for transmission and reception.
 104:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Half duplex communication with 1 common line shared for transmission and reception.
 105:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Dual mode communication with 2 common lines shared for transmission and reception.
 106:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Quad mode communication with 4 common lines shared for transmission and reception.<br><br>
 107:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 108:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI driver provides structures, enumerations and APIs for configuring the USIC channel for SPI c
 109:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * and also for data transaction.<br>
 110:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI driver features:
 111:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Configuration structure XMC_SPI_CH_CONFIG_t and SPI initialization function XMC_SPI_CH_Init()
 112:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows configuration of protocol word and frame length using XMC_SPI_CH_SetWordLength(), XMC_
 113:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows manipulation of data frame at runtime using XMC_SPI_CH_EnableSOF(), XMC_SPI_CH_EnableE
 114:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  XMC_SPI_CH_EnableSlaveSelect(), XMC_SPI_CH_DisableSlaveSelect()
 115:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Provides APIs for transmitting data and receiving data using XMC_SPI_CH_Transmit(), XMC_SPI_C
 116:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows configuration of shift clock using XMC_SPI_CH_ConfigureShiftClockOutput()
 117:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Provides enumeration of SPI protocol events using @ref XMC_SPI_CH_STATUS_FLAG_t
 118:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @{
 119:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 120:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 121:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 122:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * MACROS
 123:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 124:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 125:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC0)
 126:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI0_CH0 XMC_USIC0_CH0 /**< SPI0 channel 0 base address */
 127:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI0_CH1 XMC_USIC0_CH1 /**< SPI0 channel 1 base address */
 128:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 129:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 130:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC1)
 131:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI1_CH0 XMC_USIC1_CH0 /**< SPI1 channel 0 base address */
 132:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI1_CH1 XMC_USIC1_CH1 /**< SPI1 channel 1 base address */
 133:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 134:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 135:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC2)
 136:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI2_CH0 XMC_USIC2_CH0 /**< SPI2 channel 0 base address */
 137:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI2_CH1 XMC_USIC2_CH1 /**< SPI2 channel 1 base address */
 138:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 139:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 140:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 141:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * ENUMS
 142:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 143:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 144:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 145:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines return status of SPI driver APIs
 146:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 147:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_STATUS
 148:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** {
 149:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_OK,    /**< Status of the Module: OK */
 150:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_ERROR, /**< Status of the Module: ERROR */
 151:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_BUSY   /**< The Module is busy */
 152:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_STATUS_t;
 153:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 154:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the SPI bus mode
 155:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 156:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BUS_MODE
 157:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** {
 158:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_MASTER, /**< SPI Master */
 159:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_SLAVE   /**< SPI Slave */
 160:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BUS_MODE_t;
 161:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 162:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 163:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the Polarity of the slave select signals SELO[7:0] in relation to the master slave selec
 164:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 165:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_SLAVE_SEL_MSLS_INV
 166:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** {
 167:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_SAME_AS_MSLS = 0x0UL, /**< The SELO outputs have the same polarity as the MS
 168:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****                                                   (active high) */
 169:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_INV_TO_MSLS = 0x1UL << USIC_CH_PCR_SSCMode_SELINV_Pos /**< The SELO outputs 
 170:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                   polarity to the M
 171:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                   (active low)*/
 172:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_SLAVE_SEL_MSLS_INV_t;
 173:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 174:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 175:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the Polarity of the data inputs.
 176:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 177:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_DATA_POLARITY
 178:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** {
 179:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_DATA_POLARITY_DIRECT = 0x0UL, /**< The polarity of the data line is not inverted */
 180:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_DATA_POLARITY_INVERT = 0x1UL << USIC_CH_DX2CR_DPOL_Pos /**< The polarity of the data l
 181:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_DATA_POLARITY_t;
 182:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 183:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 184:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines Slave Select lines
 185:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 186:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_SLAVE_SELECT
 187:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** {
 188:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_0 = 1UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 0 */
 189:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_1 = 2UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 1 */
 190:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_2 = 4UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 2 */
 191:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_3 = 8UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 3 */
 192:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_4 = 16UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 4 */
 193:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_5 = 32UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 5 */
 194:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_6 = 64UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 6 */
 195:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_7 = 128UL << USIC_CH_PCR_SSCMode_SELO_Pos /**< Slave Select line 7 */
 196:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_SLAVE_SELECT_t;
 197:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 198:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 199:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines SPI specific events
 200:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 201:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_EVENT
 202:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** {
 203:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 204:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 205:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 206:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 207:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 208:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 209:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 210:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 211:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_PARITY_ERROR = USIC_CH_PCR_SSCMode_PARIEN_Msk >> 13U,       /**< Parity error ev
 212:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_MSLS_CHANGE =  USIC_CH_PCR_SSCMode_MSLSIEN_Msk >> 13U,      /**< Master slave se
 213:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_DX2TIEN_ACTIVATED = USIC_CH_PCR_SSCMode_DX2TIEN_Msk >> 13U  /**< Slave select in
 214:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_EVENT_t;
 215:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 216:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 217:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines SPI event status
 218:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 219:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_STATUS_FLAG
 220:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** {
 221:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_MSLS = USIC_CH_PSR_SSCMode_MSLS_Msk,                          /**< Status 
 222:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             select(
 223:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DX2S = USIC_CH_PSR_SSCMode_DX2S_Msk,                          /**< Status 
 224:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             input(D
 225:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_MSLS_EVENT_DETECTED = USIC_CH_PSR_SSCMode_MSLSEV_Msk,         /**< Status 
 226:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             output 
 227:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DX2T_EVENT_DETECTED = USIC_CH_PSR_SSCMode_DX2TEV_Msk,         /**< Status 
 228:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             input s
 229:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_PARITY_ERROR_EVENT_DETECTED = USIC_CH_PSR_SSCMode_PARERR_Msk, /**< Indicat
 230:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             parity 
 231:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_SSCMode_RSIF_Msk,     /**< Status 
 232:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 233:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_SSCMode_DLIF_Msk,          /**< Status 
 234:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_SSCMode_TSIF_Msk,      /**< Status
 235:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 236:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_SSCMode_TBIF_Msk,    /**< Status 
 237:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 238:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_SSCMode_RIF_Msk,             /**< Status 
 239:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_SSCMode_AIF_Msk, /**< Status 
 240:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             receive
 241:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_SSCMode_BRGIF_Msk/**< Status 
 242:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             generat
 243:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_STATUS_FLAG_t;
 244:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 245:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 246:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines input frequency sources for slave select signal delay configuration.
 247:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 248:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY
 249:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** {
 250:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FPDIV = 0x0UL, /**< Output of PDIV divider: FPDIV */
 251:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FPPP  = 0x1UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos, /**< P
 252:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FSCLK = 0x2UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos, /**< S
 253:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FMCLK = 0x3UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos  /**< M
 254:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_t;
 255:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 256:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 257:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Define data and clock input stages
 258:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 259:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INPUT
 260:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** {
 261:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN0 = 0UL,         /**< Data input stage 0 */ 
 262:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_SLAVE_SCLKIN = 1UL, /**< Clock input stage */
 263:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_SLAVE_SELIN = 2UL,  /**< Slave select input stage */
 264:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN1 = 3UL,         /**< Data input stage 1 */
 265:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN2 = 4UL,         /**< Data input stage 2 */
 266:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN3 = 5UL          /**< Data input stage 3 */
 267:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INPUT_t;
 268:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 269:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 270:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Define SPI data transfer mode
 271:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 272:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_MODE
 273:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** {
 274:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_STANDARD = 0UL,            /**< SPI standard full duplex mode */ 
 275:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX = 5UL, /**< SPI standard half duplex mode */ 
 276:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_DUAL= 6UL,                 /**< SPI half duplex mode with dual data lines */ 
 277:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_QUAD= 7UL                  /**< SPI half duplex mode with quad data lines */
 278:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_MODE_t;
 279:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 280:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 281:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 282:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI Baudrate Generator shift clock passive level
 283:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 284:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 285:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** {
 286:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 0, delay disabled */
 287:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 288:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 1, delay disabled */
 289:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 290:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 0, delay enabled */
 291:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 292:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 1, delay enabled */
 293:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 294:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 295:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 296:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 297:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI Baudrate Generator shift clock output
 298:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** */
 299:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT
 300:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** {
 301:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,  /**< Baudrate 
 302:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1  = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1   /**< Clock obta
 303:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 304:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 305:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 306:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI channel interrupt node pointers
 307:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 308:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INTERRUPT_NODE_POINTER
 309:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** {
 310:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 311:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 312:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIV
 313:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERN
 314:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOC
 315:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INTERRUPT_NODE_POINTER_t;
 316:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 317:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 318:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * DATA STRUCTURES
 319:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** ***************************************************************************************************
 320:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 321:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 322:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Structure for initializing SPI channel.
 323:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 324:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** typedef struct XMC_SPI_CH_CONFIG
 325:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** {
 326:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   uint32_t baudrate;							                /**< Module baud rate for communication */
 327:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   bool normal_divider_mode;                       /**< Selects normal divider mode for baudrate gen
 328:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_t bus_mode;                 /**< Bus mode: Master/Slave */
 329:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_MSLS_INV_t selo_inversion; /**< Enable inversion of Slave select signal rela
 330:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****                                                        MSLS signal  */
 331:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_PARITY_MODE_t parity_mode;          /**< Enable parity check for transmit and receive
 332:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_CONFIG_t;
 333:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 334:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 335:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * API PROTOTYPES
 336:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 337:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 338:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** #ifdef __cplusplus
 339:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** extern "C" {
 340:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 341:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 342:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 343:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 344:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param config pointer to constant SPI channel configuration data structure.\n
 345:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *               Refer data structure @ref XMC_SPI_CH_CONFIG_t for detail.
 346:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 347:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 348:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 349:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 350:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Initializes the selected SPI \a channel with the \a config structure.\n\n
 351:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable SPI channel by calling XMC_USIC_CH_Enable() and then configures
 352:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 353:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Baudrate,</li>
 354:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Passive data level as active high,</li>
 355:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Shift control signal as active high,</li>
 356:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Frame length as 64U,</li>
 357:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Word length as 8U,</li>
 358:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Hardware port control mode,</li>
 359:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable transmission of data TDV(Transmit data valid) bit is set to 1,</li>
 360:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable invalidation of data in TBUF once loaded into shift register,</li>
 361:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Parity mode settings</li>
 362:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 363:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * And if master mode is selected,
 364:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 365:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enables MSLS signal generation,</li>
 366:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>configures slave selection as normal mode,</li>
 367:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Set polarity for the Slave signal,</li>
 368:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Frame end mode(MSLS signal is kept active after transmission of a frame)</li>
 369:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 370:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 371:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_Init(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_CONFIG_t *const config);
 372:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 373:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 374:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 375:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 376:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 377:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 378:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 379:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the selected USIC channel to operate in SPI mode, by setting CCR.MODE bits.\n\n
 380:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * It should be executed after XMC_SPI_CH_Init() during initialization. By invoking XMC_SPI_CH_Stop
 381:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * to IDLE state. Call XMC_SPI_CH_Start() to set the SPI mode again, as needed later in the program
 382:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 383:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 384:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop()
 385:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 386:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Start(XMC_USIC_CH_t *const channel)
 387:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** {
 388:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   /* USIC channel in SPI mode */
 389:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_SPI);
 390:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** }
 391:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 392:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 393:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 394:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 395:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for stopping is processed
 396:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the USIC channel is successfully put to IDLE mode. \n
 397:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_BUSY- If the USIC channel is busy transmitting data.
 398:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 399:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 400:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the selected SPI channel to IDLE mode, by clearing CCR.MODE bits.\n\n
 401:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * After calling XMC_SPI_CH_Stop, channel is IDLE mode. So no communication is supported. XMC_SPI_C
 402:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * invoked to start the communication again.
 403:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 404:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 405:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Start()
 406:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 407:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_Stop(XMC_USIC_CH_t *const channel);
 408:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 409:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 410:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 411:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param rate Bus speed in bits per second
 412:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 413:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for setting baudrate is p
 414:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the baudrate is successfully changed. \n
 415:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_ERROR- If the new baudrate value is out of range.
 416:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 417:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 418:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Sets the bus speed in bits per second
 419:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 420:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 421:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop(), XMC_USIC_CH_GetSCLKFrequency()
 422:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 423:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 424:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 425:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 426:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 427:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param rate Bus speed in bits per second
 428:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param normal_divider_mode Selects normal divider mode for baudrate generator instead of default
 429:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 430:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for setting baudrate is p
 431:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the baudrate is successfully changed. \n
 432:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_ERROR- If the new baudrate value is out of range.
 433:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 434:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 435:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Sets the bus speed in bits per second
 436:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 437:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 438:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop(), XMC_USIC_CH_GetSCLKFrequency()
 439:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 440:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, const uint32_t rate, boo
 441:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 442:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 443:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 444:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param slave Slave select signal.\n
 445:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ref XMC_SPI_CH_SLAVE_SELECT_t for valid values.
 446:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 447:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 448:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 449:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 450:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable the selected slave signal by setting PCR.SELO bits.\n\n
 451:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Each slave is connected with one slave select signal. This is not configured in XMC_SPI_CH_Init(
 452:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect() with required \a slave to to start the communication. After finis
 453:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * communication XMC_SPI_CH_DisableSlaveSelect() can be invoked to disable the slaves.
 454:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 455:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 456:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableSlaveSelect()
 457:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 458:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_EnableSlaveSelect(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_SLAVE_SELECT_t sla
 459:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 460:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 461:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant ponter to XMC_USIC_CH_t, pointing to the USIC channel base address.
 462:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 463:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 464:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 465:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 466:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Disable all the slave signals by clearing PCR.SELO bits.\n\n
 467:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect() has to be invoked to start the communication with the desired sla
 468:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 469:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 470:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect()
 471:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 472:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_DisableSlaveSelect(XMC_USIC_CH_t *const channel);
 473:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 474:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 475:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 476:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 477:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 478:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 479:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 480:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 481:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 482:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * In Dual and Quad modes,  hardware port control(CCR.HPCEN) mode is enabled. \n\n
 483:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * By enabling this the direction of the data pin is updated by hardware itself. Before transmittin
 484:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * mode to ensure the proper communication.
 485:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 486:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 487:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Transmit()
 488:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 489:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetTransmitMode(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_MODE
 490:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** {
 491:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   channel->CCR = (channel->CCR & (uint32_t)(~USIC_CH_CCR_HPCEN_Msk)) |
 492:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****                   (((uint32_t) mode << USIC_CH_CCR_HPCEN_Pos) & (uint32_t)USIC_CH_CCR_HPCEN_Msk);
 493:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** }
 494:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 495:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 496:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 497:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param data Data to be transmitted
 498:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 499:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 500:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 501:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 502:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 503:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 504:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Puts the data into FIFO, if FIFO mode is enabled or else into standard buffer, by setting the pr
 505:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * In Dual and Quad modes,  hardware port control(CCR.HPCEN) mode is enabled. By enabling this the 
 506:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * pin is updated by hardware itself. TCI(Transmit Control Information) allows dynamic control of b
 507:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * and pin direction during data transfers by writing to SCTR.DSM and SCTR.HPCDIR bit fields. To su
 508:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * update, TCSR.HPCMD(Hardware Port control) will be enabled during the initialization using XMC_SP
 509:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 510:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 511:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 512:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive()
 513:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 514:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data, const XMC_SPI_CH_MODE_t
 515:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 516:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 517:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 518:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 519:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.      
 520:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 521:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 522:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 523:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 524:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Transmits a dummy data(FFFFH) to provide clock for slave and receives the data from the slave.\n
 525:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive() receives the data and places it into buffer based on the FIFO selection. Af
 526:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedData() can be invoked to read the data from the buffers.
 527:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 528:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 529:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedDaa()
 530:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 531:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Receive(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_MODE_t mode)
 532:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** {
 533:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   /* Transmit dummy data */
 534:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_Transmit(channel, (uint16_t)0xffffU, (XMC_SPI_CH_MODE_t)((uint16_t)mode & 0xfffbU));
 535:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** }
 536:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 537:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 538:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 539:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 540:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @return uint16_t Data read from the receive buffer.
 541:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 542:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 543:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Reads data from the receive buffer based on the FIFO selection.\n\n
 544:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Invocation of XMC_SPI_CH_Receive() receives the data and place it into receive buffer. After rec
 545:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedData() can be used to read the data from the buffer.
 546:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 547:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 548:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive()
 549:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 550:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** uint16_t XMC_SPI_CH_GetReceivedData(XMC_USIC_CH_t *const channel);
 551:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** 
 552:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** /**
 553:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 554:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 555:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 556:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 557:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 558:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the order of data transfer from LSB to MSB, by clearing SCTR.SDIR bit.\n\n
 559:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * This is typically based on the slave settings. Invoke XMC_SPI_CH_SetBitOrderLsbFirst() to set di
 560:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * the program.
 561:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  *
 562:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 563:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_SetBitOrderMsbFirst()
 564:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****  */
 565:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetBitOrderLsbFirst(XMC_USIC_CH_t *const channel)
 566:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** {
 170              	 .loc 2 566 0
 171              	 .cfi_startproc
 172              	 
 173              	 
 174              	 
 175 0000 80B4     	 push {r7}
 176              	.LCFI18:
 177              	 .cfi_def_cfa_offset 4
 178              	 .cfi_offset 7,-4
 179 0002 83B0     	 sub sp,sp,#12
 180              	.LCFI19:
 181              	 .cfi_def_cfa_offset 16
 182 0004 00AF     	 add r7,sp,#0
 183              	.LCFI20:
 184              	 .cfi_def_cfa_register 7
 185 0006 7860     	 str r0,[r7,#4]
 567:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h ****   channel->SCTR &= (uint32_t)~USIC_CH_SCTR_SDIR_Msk;
 186              	 .loc 2 567 0
 187 0008 7B68     	 ldr r3,[r7,#4]
 188 000a 5B6B     	 ldr r3,[r3,#52]
 189 000c 23F00102 	 bic r2,r3,#1
 190 0010 7B68     	 ldr r3,[r7,#4]
 191 0012 5A63     	 str r2,[r3,#52]
 568:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc\xmc_spi.h **** }
 192              	 .loc 2 568 0
 193 0014 0C37     	 adds r7,r7,#12
 194              	.LCFI21:
 195              	 .cfi_def_cfa_offset 4
 196 0016 BD46     	 mov sp,r7
 197              	.LCFI22:
 198              	 .cfi_def_cfa_register 13
 199              	 
 200 0018 5DF8047B 	 ldr r7,[sp],#4
 201              	.LCFI23:
 202              	 .cfi_restore 7
 203              	 .cfi_def_cfa_offset 0
 204 001c 7047     	 bx lr
 205              	 .cfi_endproc
 206              	.LFE249:
 208 001e 00BF     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 209              	 .align 2
 210              	 .thumb
 211              	 .thumb_func
 213              	DIGITAL_IO_SetOutputHigh:
 214              	.LFB306:
 215              	 .file 3 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2016-07-08
   5:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.16 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  14:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  57:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  58:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  60:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  61:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  62:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  63:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  64:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  65:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  66:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  67:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  68:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  69:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_Common.h>
  70:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  71:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  72:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  73:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  74:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  75:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  76:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  77:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  78:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  79:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  80:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  82:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  83:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  84:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  85:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  86:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  87:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  88:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  89:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  90:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  91:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  92:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  93:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  94:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** {
  95:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  96:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  97:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  98:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  99:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 100:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 101:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 102:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 103:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 104:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 105:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 106:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 107:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 108:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 109:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 110:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 111:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 112:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 113:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 114:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 115:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 116:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 117:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 118:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 119:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 120:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 121:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 122:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 123:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 124:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 125:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 126:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 127:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 129:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 130:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 131:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 132:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 134:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 135:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 136:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 137:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 138:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 139:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 140:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 141:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 142:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 144:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 145:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 146:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 147:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 148:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 149:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 150:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 151:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 152:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 153:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 155:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 156:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 157:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 158:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 159:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 160:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 161:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 162:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 163:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 164:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 165:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 166:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 167:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 168:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 169:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 170:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 171:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 172:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 173:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 174:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 175:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 176:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 178:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 179:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 180:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 181:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 182:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 183:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 184:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 185:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 186:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 187:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 188:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 189:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 190:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 191:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 192:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 193:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 194:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 195:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 196:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 197:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 198:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 199:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 200:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 201:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 202:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 203:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 204:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 205:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 206:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 207:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 208:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 209:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 210:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 211:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 212:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 213:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 214:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 216:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 217:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 218:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 219:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 220:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 221:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 222:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 223:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 224:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 225:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 226:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 227:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 228:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 229:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 230:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 231:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 232:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 233:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 234:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 236:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 237:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 238:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 239:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 240:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 241:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 242:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 243:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 244:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 245:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 246:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 247:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 248:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 249:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 250:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 251:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 252:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 253:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 254:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 255:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 256:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 257:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 258:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 259:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 260:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 261:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 262:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 263:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 264:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 265:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 266:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 267:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 268:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 269:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 216              	 .loc 3 269 0
 217              	 .cfi_startproc
 218              	 
 219              	 
 220 0000 80B5     	 push {r7,lr}
 221              	.LCFI24:
 222              	 .cfi_def_cfa_offset 8
 223              	 .cfi_offset 7,-8
 224              	 .cfi_offset 14,-4
 225 0002 82B0     	 sub sp,sp,#8
 226              	.LCFI25:
 227              	 .cfi_def_cfa_offset 16
 228 0004 00AF     	 add r7,sp,#0
 229              	.LCFI26:
 230              	 .cfi_def_cfa_register 7
 231 0006 7860     	 str r0,[r7,#4]
 270:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 271:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 232              	 .loc 3 271 0
 233 0008 7B68     	 ldr r3,[r7,#4]
 234 000a 1A68     	 ldr r2,[r3]
 235 000c 7B68     	 ldr r3,[r7,#4]
 236 000e 1B7C     	 ldrb r3,[r3,#16]
 237 0010 1046     	 mov r0,r2
 238 0012 1946     	 mov r1,r3
 239 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 272:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 240              	 .loc 3 272 0
 241 0018 0837     	 adds r7,r7,#8
 242              	.LCFI27:
 243              	 .cfi_def_cfa_offset 8
 244 001a BD46     	 mov sp,r7
 245              	.LCFI28:
 246              	 .cfi_def_cfa_register 13
 247              	 
 248 001c 80BD     	 pop {r7,pc}
 249              	 .cfi_endproc
 250              	.LFE306:
 252 001e 00BF     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 253              	 .align 2
 254              	 .thumb
 255              	 .thumb_func
 257              	DIGITAL_IO_SetOutputLow:
 258              	.LFB307:
 273:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 274:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 275:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 276:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 277:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 278:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 279:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 280:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 281:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 282:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 283:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 284:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 285:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 286:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 287:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 288:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 289:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 290:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 291:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 292:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 293:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 294:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 295:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 296:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 297:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 298:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 299:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 300:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 301:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 302:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 303:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 304:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 305:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 306:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 308:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 309:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 310:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 311:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 312:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 313:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 314:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 315:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 316:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 259              	 .loc 3 316 0
 260              	 .cfi_startproc
 261              	 
 262              	 
 263 0000 80B5     	 push {r7,lr}
 264              	.LCFI29:
 265              	 .cfi_def_cfa_offset 8
 266              	 .cfi_offset 7,-8
 267              	 .cfi_offset 14,-4
 268 0002 82B0     	 sub sp,sp,#8
 269              	.LCFI30:
 270              	 .cfi_def_cfa_offset 16
 271 0004 00AF     	 add r7,sp,#0
 272              	.LCFI31:
 273              	 .cfi_def_cfa_register 7
 274 0006 7860     	 str r0,[r7,#4]
 317:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 318:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 275              	 .loc 3 318 0
 276 0008 7B68     	 ldr r3,[r7,#4]
 277 000a 1A68     	 ldr r2,[r3]
 278 000c 7B68     	 ldr r3,[r7,#4]
 279 000e 1B7C     	 ldrb r3,[r3,#16]
 280 0010 1046     	 mov r0,r2
 281 0012 1946     	 mov r1,r3
 282 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 319:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 283              	 .loc 3 319 0
 284 0018 0837     	 adds r7,r7,#8
 285              	.LCFI32:
 286              	 .cfi_def_cfa_offset 8
 287 001a BD46     	 mov sp,r7
 288              	.LCFI33:
 289              	 .cfi_def_cfa_register 13
 290              	 
 291 001c 80BD     	 pop {r7,pc}
 292              	 .cfi_endproc
 293              	.LFE307:
 295 001e 00BF     	 .section .text.PIN_INTERRUPT_GetPinValue,"ax",%progbits
 296              	 .align 2
 297              	 .thumb
 298              	 .thumb_func
 300              	PIN_INTERRUPT_GetPinValue:
 301              	.LFB321:
 302              	 .file 4 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT/pin_interrupt.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @file pin_interrupt.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @date 2016-03-02
   4:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * NOTE:
   6:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   8:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @cond
   9:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  10:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT v4.0.2 - The PIN_INTERRUPT APP invokes user interrupt handler in a response to ris
  11:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                        edge event signal on a pin.
  12:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  13:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Copyright (c) 2016, Infineon Technologies AG
  14:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * All rights reserved.                        
  15:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  16:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * following conditions are met:   
  18:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  19:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer.                        
  21:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  22:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer in the documentation and/or other materials provided with the distribution.     
  24:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                         
  25:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   products derived from this software without specific prior written permission. 
  27:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  28:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    
  35:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  36:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * with Infineon Technologies AG (dave@infineon.com).         
  38:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  39:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  40:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Change History
  41:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * --------------
  42:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2015-12-03:
  43:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Initial version for DAVEv4. <BR>
  44:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcond 
  45:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  46:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  47:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  48:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifndef PIN_INTERRUPT_H
  49:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_H
  50:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  51:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  52:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * HEADER FILES                                                                                    
  53:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  54:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
  55:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include <xmc_scu.h>
  56:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  57:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include <xmc_gpio.h>
  58:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include <xmc_eru.h>
  59:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include <DAVE_Common.h>
  60:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "pin_interrupt_conf.h"
  61:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  /*************************************************************************************************
  62:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * MACROS                                                                                          
  63:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  64:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  65:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       (XMC_LIB_MINOR_VERSION >= 1U) && \
  66:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       (XMC_LIB_PATCH_VERSION >= 6U)))
  67:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #error "PIN_INTERRUPT requires XMC Peripheral Library v2.1.6 or higher"
  68:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  69:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  70:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  71:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup App_publicparam
  72:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  73:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  74:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  75:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  @brief Initialization data structure for PIN_INTERRUPT APP
  76:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  77:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  78:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  79:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
  80:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  81:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  82:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  /*************************************************************************************************
  83:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ENUMS
  84:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  85:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  86:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_enumerations
  87:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  88:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  89:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /*
  90:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief enumeration for PIN_INTERRUPT APP
  91:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  92:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_STATUS
  93:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
  94:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_SUCCESS = 0U,        /**<APP initialization is success */
  95:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_FAILURE = 1U         /**<APP initialization is failure */
  96:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_STATUS_t;
  97:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  98:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  99:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 100:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Defines trigger edge for the event generation by ETLx (Event Trigger Logic, x = [0 to 3]) unit, 
 101:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * from ERSx(Event request source, x = [0 to 3]) unit.
 102:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 103:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_EDGE
 104:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 105:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_NONE = 0U, /**< no event enabled */
 106:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_RISING = 1U,   /**< detection of rising edge generates the event */
 107:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_FALLING = 2U,  /**< detection of falling edge generates the event */
 108:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_BOTH = 3U      /**< detection of either edges generates the event */
 109:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_EDGE_t;
 110:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 111:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 112:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 113:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 114:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 115:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * DATA STRUCTURES
 116:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** ***************************************************************************************************
 117:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 118:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_datastructures
 119:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 120:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 121:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 122:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 123:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Configuration structure for PIN_INTERRUPT APP
 124:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 125:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef struct PIN_INTERRUPT
 126:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 127:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_t *eru;  /**< Mapped ERU module */
 128:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_PORT_t *port;  /**< Mapped port number */
 129:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_CONFIG_t gpio_config;   /**< Initializes the input pin characteristics */
 130:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_ETL_CONFIG_t etl_config;  /**< reference to ERUx_ETLy (x = [0..1], y = [0..4])
 131:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****                                                       module configuration */
 132:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
 133:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_SCU_IRQCTRL_t irqctrl;  /**< selects the interrupt source for a NVIC interrupt node*/
 134:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 135:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   IRQn_Type IRQn;       /**< Mapped NVIC Node */
 136:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_priority; 	  /**< Node Interrupt Priority */
 137:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_FAMILY == XMC4)
 138:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_subpriority;  /**< Node Interrupt SubPriority only valid for XMC4x */
 139:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 140:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t etl; /*< ETLx channel (x = [0..3])*/
 141:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t ogu; /*< OGUy channel (y = [0..3])*/
 142:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t pin; /*< Mapped pin number */
 143:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   bool enable_at_init;  /**< Interrupt enable for Node at initialization*/
 144:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_t;
 145:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 146:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 147:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 148:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 149:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifdef __cplusplus
 150:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** extern "C" {
 151:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 152:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 153:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * API Prototypes
 154:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
 155:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 156:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_apidoc
 157:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 158:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 159:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 160:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Get PIN_INTERRUPT APP version
 161:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 162:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 163:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description: </b><br>
 164:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * The function can be used to check application software compatibility with a
 165:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * specific version of the APP.
 166:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 167:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 168:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 169:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 170:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include <DAVE.h>
 171:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 172:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void) {
 173:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t init_status;
 174:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_APP_VERSION_t version;
 175:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 176:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // Initialize PIN_INTERRUPT APP:
 177:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // PIN_INTERRUPT_Init() is called from within DAVE_Init().
 178:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   init_status = DAVE_Init();
 179:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 180:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == init_status)
 181:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 182:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     version = PIN_INTERRUPT_GetAppVersion();
 183:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     if (version.major != 4U) {
 184:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *       // Probably, not the right version.
 185:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 186:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 187:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 188:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     // More code here
 189:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     while(1)
 190:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     {
 191:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 192:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 193:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 194:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 195:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 196:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** DAVE_APP_VERSION_t PIN_INTERRUPT_GetAppVersion(void);
 197:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 198:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 199:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Initializes a PIN_INTERRUPT APP instance
 200:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 201:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return
 202:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_SUCCESS             : if initialization is successful\n
 203:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_FAILURE             : if initialization is failed
 204:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 205:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description:</b><br>
 206:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT_Init API is called during initialization of DAVE APPS. This API Initializes input 
 207:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ERU and OGU hardware module initialization, Configures NVIC node and its priority in order to ge
 208:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 209:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 210:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 211:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 212:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include <DAVE.h>
 213:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 214:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void)
 215:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 216:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t status;
 217:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 218:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 219:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if(DAVE_STATUS_SUCCESS == status)
 220:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 221:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    // user code
 222:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 223:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     while(1)
 224:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     {
 225:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 226:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 227:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 228:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 229:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 230:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 231:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 232:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 233:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** PIN_INTERRUPT_STATUS_t PIN_INTERRUPT_Init(const PIN_INTERRUPT_t *const handle);
 234:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 235:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 236:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Enables the IRQ.
 237:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 238:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 239:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 240:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 241:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 242:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include <DAVE.h>
 243:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 244:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 245:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 246:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 247:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 248:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 249:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if(DAVE_STATUS_SUCCESS == status)
 250:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 251:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    // user code
 252:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 253:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    PIN_INTERRUPT_Enable(&PIN_INTERRUPT_0);
 254:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    while(1)
 255:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {}
 256:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 257:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 258:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 259:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 260:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 261:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 262:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Enable(const PIN_INTERRUPT_t *const handle)
 263:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 264:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Enable: Handler null pointer", handle != NULL);
 265:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_EnableIRQ(handle->IRQn);
 266:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 267:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 268:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 269:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Disables the IRQ.
 270:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 271:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 272:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 273:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 274:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 275:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include <DAVE.h>
 276:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 277:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 278:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 279:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 280:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 281:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 282:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 283:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if(DAVE_STATUS_SUCCESS == status)
 284:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 285:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    // user code
 286:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 287:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    PIN_INTERRUPT_Disable(&PIN_INTERRUPT_0);
 288:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    while(1)
 289:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {}
 290:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 291:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 292:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 293:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 294:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 295:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 296:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 297:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Disable(const PIN_INTERRUPT_t *const handle)
 298:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 299:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Disable: Handler null pointer", handle != NULL);
 300:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_DisableIRQ(handle->IRQn);
 301:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 302:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 303:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 304:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @brief Read input level of port pin.
 305:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 306:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @return uint32_t input logic level. Range:0-1
 307:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 308:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * \par<b>Description:</b><br>
 309:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * This function reads the Pn_IN register and returns the current logical value at the GPIO pin.
 310:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 311:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 312:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * Example Usage:
 313:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @code
 314:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 315:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * int main(void)
 316:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * {
 317:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   DAVE_STATUS_t status;
 318:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   uint32_t pin_status;
 319:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   status = DAVE_Init();   // (DAVE_STATUS_t)PIN_INTERRUPT_Init(&PIN_INTERRUPT_0) is called within
 320:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   if(status == DAVE_STATUS_SUCCESS)
 321:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 322:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 323:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 324:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   else
 325:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 326:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 327:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     while(1U)
 328:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 329:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 330:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 331:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 332:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   while(1U)
 333:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 334:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     pin_status = PIN_INTERRUPT_GetPinValue(&PIN_INTERRUPT_0);
 335:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     if(pin_status == 1)
 336:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 337:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 338:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 339:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     else
 340:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 341:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 342:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 343:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 344:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   return (1);
 345:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * }
 346:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *  @endcode
 347:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** */
 348:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE uint32_t PIN_INTERRUPT_GetPinValue(const PIN_INTERRUPT_t *const handle)
 349:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 303              	 .loc 4 349 0
 304              	 .cfi_startproc
 305              	 
 306              	 
 307 0000 80B5     	 push {r7,lr}
 308              	.LCFI34:
 309              	 .cfi_def_cfa_offset 8
 310              	 .cfi_offset 7,-8
 311              	 .cfi_offset 14,-4
 312 0002 82B0     	 sub sp,sp,#8
 313              	.LCFI35:
 314              	 .cfi_def_cfa_offset 16
 315 0004 00AF     	 add r7,sp,#0
 316              	.LCFI36:
 317              	 .cfi_def_cfa_register 7
 318 0006 7860     	 str r0,[r7,#4]
 350:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_GetPinValue: Handler null pointer", handle != NULL);
 351:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   return (XMC_GPIO_GetInput(handle->port, handle->pin));
 319              	 .loc 4 351 0
 320 0008 7B68     	 ldr r3,[r7,#4]
 321 000a 5A68     	 ldr r2,[r3,#4]
 322 000c 7B68     	 ldr r3,[r7,#4]
 323 000e 93F82130 	 ldrb r3,[r3,#33]
 324 0012 1046     	 mov r0,r2
 325 0014 1946     	 mov r1,r3
 326 0016 FFF7FEFF 	 bl XMC_GPIO_GetInput
 327 001a 0346     	 mov r3,r0
 352:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 328              	 .loc 4 352 0
 329 001c 1846     	 mov r0,r3
 330 001e 0837     	 adds r7,r7,#8
 331              	.LCFI37:
 332              	 .cfi_def_cfa_offset 8
 333 0020 BD46     	 mov sp,r7
 334              	.LCFI38:
 335              	 .cfi_def_cfa_register 13
 336              	 
 337 0022 80BD     	 pop {r7,pc}
 338              	 .cfi_endproc
 339              	.LFE321:
 341              	 .comm direction_status,2,2
 342              	 .comm clamp_status,2,2
 343              	 .comm pin_status,4,4
 344              	 .global green_led
 345              	 .section .rodata.green_led,"a",%progbits
 346              	 .align 1
 349              	green_led:
 350 0000 FF00     	 .short 255
 351              	 .global red_led
 352              	 .section .rodata.red_led,"a",%progbits
 353              	 .align 1
 356              	red_led:
 357 0000 0000     	 .space 2
 358              	 .global xDelay
 359              	 .section .rodata.xDelay,"a",%progbits
 360              	 .align 2
 363              	xDelay:
 364 0000 14000000 	 .word 20
 365              	 .section .rodata.TLE94112EL_0,"a",%progbits
 366              	 .align 2
 369              	TLE94112EL_0:
 370 0000 00000000 	 .word tle94112el_enable
 371 0004 00000000 	 .word tle94112el_disable
 372 0008 00000000 	 .word tle94112el_spi_transfer
 373              	 .global FORWARD_Handle
 374              	 .section .bss.FORWARD_Handle,"aw",%nobits
 375              	 .align 2
 378              	FORWARD_Handle:
 379 0000 00000000 	 .space 4
 380              	 .global BACKWARD_Handle
 381              	 .section .bss.BACKWARD_Handle,"aw",%nobits
 382              	 .align 2
 385              	BACKWARD_Handle:
 386 0000 00000000 	 .space 4
 387              	 .global LEFT_Handle
 388              	 .section .bss.LEFT_Handle,"aw",%nobits
 389              	 .align 2
 392              	LEFT_Handle:
 393 0000 00000000 	 .space 4
 394              	 .global RIGHT_Handle
 395              	 .section .bss.RIGHT_Handle,"aw",%nobits
 396              	 .align 2
 399              	RIGHT_Handle:
 400 0000 00000000 	 .space 4
 401              	 .global UP_Handle
 402              	 .section .bss.UP_Handle,"aw",%nobits
 403              	 .align 2
 406              	UP_Handle:
 407 0000 00000000 	 .space 4
 408              	 .global DOWN_Handle
 409              	 .section .bss.DOWN_Handle,"aw",%nobits
 410              	 .align 2
 413              	DOWN_Handle:
 414 0000 00000000 	 .space 4
 415              	 .global OPEN_Handle
 416              	 .section .bss.OPEN_Handle,"aw",%nobits
 417              	 .align 2
 420              	OPEN_Handle:
 421 0000 00000000 	 .space 4
 422              	 .global CLOSE_Handle
 423              	 .section .bss.CLOSE_Handle,"aw",%nobits
 424              	 .align 2
 427              	CLOSE_Handle:
 428 0000 00000000 	 .space 4
 429              	 .global ROTATE_Handle
 430              	 .section .bss.ROTATE_Handle,"aw",%nobits
 431              	 .align 2
 434              	ROTATE_Handle:
 435 0000 00000000 	 .space 4
 436              	 .global DIRECTION_Handle
 437              	 .section .bss.DIRECTION_Handle,"aw",%nobits
 438              	 .align 2
 441              	DIRECTION_Handle:
 442 0000 00000000 	 .space 4
 443              	 .global CLAMP_Handle
 444              	 .section .bss.CLAMP_Handle,"aw",%nobits
 445              	 .align 2
 448              	CLAMP_Handle:
 449 0000 00000000 	 .space 4
 450              	 .comm FORWARD_interruptSemaphore,4,4
 451              	 .comm BACKWARD_interruptSemaphore,4,4
 452              	 .comm LEFT_interruptSemaphore,4,4
 453              	 .comm RIGHT_interruptSemaphore,4,4
 454              	 .comm UP_interruptSemaphore,4,4
 455              	 .comm DOWN_interruptSemaphore,4,4
 456              	 .comm OPEN_interruptSemaphore,4,4
 457              	 .comm CLOSE_interruptSemaphore,4,4
 458              	 .comm ROTATE_interruptSemaphore,4,4
 459              	 .comm DIRECTION_interruptSemaphore,4,4
 460              	 .comm CLAMP_interruptSemaphore,4,4
 461              	 .section .text.FORWARD_Task,"ax",%progbits
 462              	 .align 2
 463              	 .global FORWARD_Task
 464              	 .thumb
 465              	 .thumb_func
 467              	FORWARD_Task:
 468              	.LFB368:
 469              	 .file 5 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2020 Sep 02 12:52:04
   5:../main.c     ****  *  Author: FORGE-15R
   6:../main.c     ****  */
   7:../main.c     **** 
   8:../main.c     **** 
   9:../main.c     **** 
  10:../main.c     **** 
  11:../main.c     **** #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declaratio
  12:../main.c     **** #include "ext_lib/base.h"
  13:../main.c     **** 
  14:../main.c     **** /**
  15:../main.c     **** 
  16:../main.c     ****  * @brief main() - Application entry point
  17:../main.c     ****  *
  18:../main.c     ****  * <b>Details of function</b><br>
  19:../main.c     ****  * This routine is the application entry point. It is invoked by the device startup code. It is res
  20:../main.c     ****  * invoking the APP initialization dispatcher routine - DAVE_Init() and hosting the place-holder fo
  21:../main.c     ****  * code.
  22:../main.c     ****  */
  23:../main.c     **** 
  24:../main.c     **** volatile uint16_t direction_status;
  25:../main.c     **** volatile uint16_t clamp_status;
  26:../main.c     **** volatile uint32_t pin_status;
  27:../main.c     **** const uint16_t green_led = 0b11111111;
  28:../main.c     **** const uint16_t red_led = 0b00000000;
  29:../main.c     **** const TickType_t xDelay = 20/portTICK_PERIOD_MS;
  30:../main.c     **** 
  31:../main.c     **** 
  32:../main.c     **** 
  33:../main.c     **** static void tle94112el_enable(void);
  34:../main.c     **** static void tle94112el_disable(void);
  35:../main.c     **** static int32_t tle94112el_spi_transfer(uint8_t *tx_data, uint8_t *rx_data);
  36:../main.c     **** 
  37:../main.c     **** static const TLE94112EL_t TLE94112EL_0 =
  38:../main.c     **** 
  39:../main.c     ****   {
  40:../main.c     **** 
  41:../main.c     ****     .enable = tle94112el_enable,
  42:../main.c     **** 
  43:../main.c     ****     .disable = tle94112el_disable,
  44:../main.c     **** 
  45:../main.c     ****     .spi_transfer = tle94112el_spi_transfer
  46:../main.c     **** 
  47:../main.c     ****   };
  48:../main.c     **** 
  49:../main.c     **** TaskHandle_t FORWARD_Handle = NULL;
  50:../main.c     **** TaskHandle_t BACKWARD_Handle = NULL;
  51:../main.c     **** TaskHandle_t LEFT_Handle = NULL;
  52:../main.c     **** TaskHandle_t RIGHT_Handle = NULL;
  53:../main.c     **** TaskHandle_t UP_Handle = NULL;
  54:../main.c     **** TaskHandle_t DOWN_Handle = NULL;
  55:../main.c     **** TaskHandle_t OPEN_Handle = NULL;
  56:../main.c     **** TaskHandle_t CLOSE_Handle = NULL;
  57:../main.c     **** TaskHandle_t ROTATE_Handle = NULL;
  58:../main.c     **** TaskHandle_t DIRECTION_Handle = NULL;
  59:../main.c     **** TaskHandle_t CLAMP_Handle = NULL;
  60:../main.c     **** 
  61:../main.c     **** SemaphoreHandle_t FORWARD_interruptSemaphore;
  62:../main.c     **** SemaphoreHandle_t BACKWARD_interruptSemaphore;
  63:../main.c     **** SemaphoreHandle_t LEFT_interruptSemaphore;
  64:../main.c     **** SemaphoreHandle_t RIGHT_interruptSemaphore;
  65:../main.c     **** SemaphoreHandle_t UP_interruptSemaphore;
  66:../main.c     **** SemaphoreHandle_t DOWN_interruptSemaphore;
  67:../main.c     **** SemaphoreHandle_t OPEN_interruptSemaphore;
  68:../main.c     **** SemaphoreHandle_t CLOSE_interruptSemaphore;
  69:../main.c     **** SemaphoreHandle_t ROTATE_interruptSemaphore;
  70:../main.c     **** SemaphoreHandle_t DIRECTION_interruptSemaphore;
  71:../main.c     **** SemaphoreHandle_t CLAMP_interruptSemaphore;
  72:../main.c     **** 
  73:../main.c     **** 
  74:../main.c     **** void FORWARD_Task(void *p){
 470              	 .loc 5 74 0
 471              	 .cfi_startproc
 472              	 
 473              	 
 474 0000 80B5     	 push {r7,lr}
 475              	.LCFI39:
 476              	 .cfi_def_cfa_offset 8
 477              	 .cfi_offset 7,-8
 478              	 .cfi_offset 14,-4
 479 0002 82B0     	 sub sp,sp,#8
 480              	.LCFI40:
 481              	 .cfi_def_cfa_offset 16
 482 0004 00AF     	 add r7,sp,#0
 483              	.LCFI41:
 484              	 .cfi_def_cfa_register 7
 485 0006 7860     	 str r0,[r7,#4]
 486              	.L13:
  75:../main.c     **** 
  76:../main.c     **** 	while(1){
  77:../main.c     **** 
  78:../main.c     **** 		if (xSemaphoreTake(FORWARD_interruptSemaphore, portMAX_DELAY) == pdPASS){
 487              	 .loc 5 78 0
 488 0008 334B     	 ldr r3,.L14
 489 000a 1B68     	 ldr r3,[r3]
 490 000c 1846     	 mov r0,r3
 491 000e 4FF0FF31 	 mov r1,#-1
 492 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 493 0016 0346     	 mov r3,r0
 494 0018 012B     	 cmp r3,#1
 495 001a 5CD1     	 bne .L11
  79:../main.c     **** 
  80:../main.c     **** 			pin_status = PIN_INTERRUPT_GetPinValue(&DIRECTION_INTERRUPT);
 496              	 .loc 5 80 0
 497 001c 2F48     	 ldr r0,.L14+4
 498 001e FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 499 0022 0246     	 mov r2,r0
 500 0024 2E4B     	 ldr r3,.L14+8
 501 0026 1A60     	 str r2,[r3]
  81:../main.c     **** 			if(pin_status==1){
 502              	 .loc 5 81 0
 503 0028 2D4B     	 ldr r3,.L14+8
 504 002a 1B68     	 ldr r3,[r3]
 505 002c 012B     	 cmp r3,#1
 506 002e 29D1     	 bne .L12
  82:../main.c     **** 				//FORWARD
  83:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x01, 0x99);
 507              	 .loc 5 83 0
 508 0030 2C48     	 ldr r0,.L14+12
 509 0032 0121     	 movs r1,#1
 510 0034 9922     	 movs r2,#153
 511 0036 FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
  84:../main.c     **** 				  vTaskDelay( xDelay );
 512              	 .loc 5 84 0
 513 003a 1423     	 movs r3,#20
 514 003c 1846     	 mov r0,r3
 515 003e FFF7FEFF 	 bl vTaskDelay
  85:../main.c     **** 
  86:../main.c     **** 					TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x02, 0x99);
 516              	 .loc 5 86 0
 517 0042 2848     	 ldr r0,.L14+12
 518 0044 0221     	 movs r1,#2
 519 0046 9922     	 movs r2,#153
 520 0048 FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
  87:../main.c     **** 					  vTaskDelay( xDelay );
 521              	 .loc 5 87 0
 522 004c 1423     	 movs r3,#20
 523 004e 1846     	 mov r0,r3
 524 0050 FFF7FEFF 	 bl vTaskDelay
  88:../main.c     **** 
  89:../main.c     **** 					  TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x03, 0x99);
 525              	 .loc 5 89 0
 526 0054 2348     	 ldr r0,.L14+12
 527 0056 0321     	 movs r1,#3
 528 0058 9922     	 movs r2,#153
 529 005a FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
  90:../main.c     **** 				  vTaskDelay( xDelay );
 530              	 .loc 5 90 0
 531 005e 1423     	 movs r3,#20
 532 0060 1846     	 mov r0,r3
 533 0062 FFF7FEFF 	 bl vTaskDelay
  91:../main.c     **** 
  92:../main.c     **** 					 DIGITAL_IO_SetOutputHigh(&MOTOR_HIGH);
 534              	 .loc 5 92 0
 535 0066 2048     	 ldr r0,.L14+16
 536 0068 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
  93:../main.c     **** 					  vTaskDelay( xDelay );
 537              	 .loc 5 93 0
 538 006c 1423     	 movs r3,#20
 539 006e 1846     	 mov r0,r3
 540 0070 FFF7FEFF 	 bl vTaskDelay
  94:../main.c     **** 
  95:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_LOW);
 541              	 .loc 5 95 0
 542 0074 1D48     	 ldr r0,.L14+20
 543 0076 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
  96:../main.c     **** 					  vTaskDelay( xDelay );
 544              	 .loc 5 96 0
 545 007a 1423     	 movs r3,#20
 546 007c 1846     	 mov r0,r3
 547 007e FFF7FEFF 	 bl vTaskDelay
 548 0082 28E0     	 b .L11
 549              	.L12:
  97:../main.c     **** 
  98:../main.c     **** 			}
  99:../main.c     **** 
 100:../main.c     **** 			else{
 101:../main.c     **** 				//stop
 102:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x01, 0x00);
 550              	 .loc 5 102 0
 551 0084 1748     	 ldr r0,.L14+12
 552 0086 0121     	 movs r1,#1
 553 0088 0022     	 movs r2,#0
 554 008a FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 103:../main.c     **** 
 104:../main.c     **** 				  vTaskDelay( xDelay );
 555              	 .loc 5 104 0
 556 008e 1423     	 movs r3,#20
 557 0090 1846     	 mov r0,r3
 558 0092 FFF7FEFF 	 bl vTaskDelay
 105:../main.c     **** 
 106:../main.c     **** 					TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x02, 0x00);
 559              	 .loc 5 106 0
 560 0096 1348     	 ldr r0,.L14+12
 561 0098 0221     	 movs r1,#2
 562 009a 0022     	 movs r2,#0
 563 009c FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 107:../main.c     **** 					  vTaskDelay( xDelay );
 564              	 .loc 5 107 0
 565 00a0 1423     	 movs r3,#20
 566 00a2 1846     	 mov r0,r3
 567 00a4 FFF7FEFF 	 bl vTaskDelay
 108:../main.c     **** 
 109:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x03, 0x00);
 568              	 .loc 5 109 0
 569 00a8 0E48     	 ldr r0,.L14+12
 570 00aa 0321     	 movs r1,#3
 571 00ac 0022     	 movs r2,#0
 572 00ae FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 110:../main.c     **** 				  vTaskDelay( xDelay );
 573              	 .loc 5 110 0
 574 00b2 1423     	 movs r3,#20
 575 00b4 1846     	 mov r0,r3
 576 00b6 FFF7FEFF 	 bl vTaskDelay
 111:../main.c     **** 
 112:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_HIGH);
 577              	 .loc 5 112 0
 578 00ba 0B48     	 ldr r0,.L14+16
 579 00bc FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 113:../main.c     **** 					  vTaskDelay( xDelay );
 580              	 .loc 5 113 0
 581 00c0 1423     	 movs r3,#20
 582 00c2 1846     	 mov r0,r3
 583 00c4 FFF7FEFF 	 bl vTaskDelay
 114:../main.c     **** 
 115:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_LOW);
 584              	 .loc 5 115 0
 585 00c8 0848     	 ldr r0,.L14+20
 586 00ca FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 116:../main.c     **** 					  vTaskDelay( xDelay );
 587              	 .loc 5 116 0
 588 00ce 1423     	 movs r3,#20
 589 00d0 1846     	 mov r0,r3
 590 00d2 FFF7FEFF 	 bl vTaskDelay
 591              	.L11:
 117:../main.c     **** 			}
 118:../main.c     **** 		}
 119:../main.c     **** 	}
 592              	 .loc 5 119 0
 593 00d6 97E7     	 b .L13
 594              	.L15:
 595              	 .align 2
 596              	.L14:
 597 00d8 00000000 	 .word FORWARD_interruptSemaphore
 598 00dc 00000000 	 .word DIRECTION_INTERRUPT
 599 00e0 00000000 	 .word pin_status
 600 00e4 00000000 	 .word TLE94112EL_0
 601 00e8 00000000 	 .word MOTOR_HIGH
 602 00ec 00000000 	 .word MOTOR_LOW
 603              	 .cfi_endproc
 604              	.LFE368:
 606              	 .section .text.BACKWARD_Task,"ax",%progbits
 607              	 .align 2
 608              	 .global BACKWARD_Task
 609              	 .thumb
 610              	 .thumb_func
 612              	BACKWARD_Task:
 613              	.LFB369:
 120:../main.c     **** }
 121:../main.c     **** 
 122:../main.c     **** void BACKWARD_Task(void *p){
 614              	 .loc 5 122 0
 615              	 .cfi_startproc
 616              	 
 617              	 
 618 0000 80B5     	 push {r7,lr}
 619              	.LCFI42:
 620              	 .cfi_def_cfa_offset 8
 621              	 .cfi_offset 7,-8
 622              	 .cfi_offset 14,-4
 623 0002 82B0     	 sub sp,sp,#8
 624              	.LCFI43:
 625              	 .cfi_def_cfa_offset 16
 626 0004 00AF     	 add r7,sp,#0
 627              	.LCFI44:
 628              	 .cfi_def_cfa_register 7
 629 0006 7860     	 str r0,[r7,#4]
 630              	.L19:
 123:../main.c     **** 
 124:../main.c     **** 	while(1){
 125:../main.c     **** 
 126:../main.c     **** 		if (xSemaphoreTake(BACKWARD_interruptSemaphore, portMAX_DELAY) == pdPASS){
 631              	 .loc 5 126 0
 632 0008 334B     	 ldr r3,.L20
 633 000a 1B68     	 ldr r3,[r3]
 634 000c 1846     	 mov r0,r3
 635 000e 4FF0FF31 	 mov r1,#-1
 636 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 637 0016 0346     	 mov r3,r0
 638 0018 012B     	 cmp r3,#1
 639 001a 5CD1     	 bne .L17
 127:../main.c     **** 
 128:../main.c     **** 			pin_status = PIN_INTERRUPT_GetPinValue(&DIRECTION_INTERRUPT);
 640              	 .loc 5 128 0
 641 001c 2F48     	 ldr r0,.L20+4
 642 001e FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 643 0022 0246     	 mov r2,r0
 644 0024 2E4B     	 ldr r3,.L20+8
 645 0026 1A60     	 str r2,[r3]
 129:../main.c     **** 			if(pin_status==1){
 646              	 .loc 5 129 0
 647 0028 2D4B     	 ldr r3,.L20+8
 648 002a 1B68     	 ldr r3,[r3]
 649 002c 012B     	 cmp r3,#1
 650 002e 29D1     	 bne .L18
 130:../main.c     **** 				//BACKWARD
 131:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x01, 0x66);
 651              	 .loc 5 131 0
 652 0030 2C48     	 ldr r0,.L20+12
 653 0032 0121     	 movs r1,#1
 654 0034 6622     	 movs r2,#102
 655 0036 FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 132:../main.c     **** 
 133:../main.c     **** 				  vTaskDelay( xDelay );
 656              	 .loc 5 133 0
 657 003a 1423     	 movs r3,#20
 658 003c 1846     	 mov r0,r3
 659 003e FFF7FEFF 	 bl vTaskDelay
 134:../main.c     **** 					TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x02, 0x66);
 660              	 .loc 5 134 0
 661 0042 2848     	 ldr r0,.L20+12
 662 0044 0221     	 movs r1,#2
 663 0046 6622     	 movs r2,#102
 664 0048 FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 135:../main.c     **** 					  vTaskDelay( xDelay );
 665              	 .loc 5 135 0
 666 004c 1423     	 movs r3,#20
 667 004e 1846     	 mov r0,r3
 668 0050 FFF7FEFF 	 bl vTaskDelay
 136:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x03, 0x66);
 669              	 .loc 5 136 0
 670 0054 2348     	 ldr r0,.L20+12
 671 0056 0321     	 movs r1,#3
 672 0058 6622     	 movs r2,#102
 673 005a FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 137:../main.c     **** 				  vTaskDelay( xDelay );
 674              	 .loc 5 137 0
 675 005e 1423     	 movs r3,#20
 676 0060 1846     	 mov r0,r3
 677 0062 FFF7FEFF 	 bl vTaskDelay
 138:../main.c     **** 
 139:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_HIGH);
 678              	 .loc 5 139 0
 679 0066 2048     	 ldr r0,.L20+16
 680 0068 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 140:../main.c     **** 					  vTaskDelay( xDelay );
 681              	 .loc 5 140 0
 682 006c 1423     	 movs r3,#20
 683 006e 1846     	 mov r0,r3
 684 0070 FFF7FEFF 	 bl vTaskDelay
 141:../main.c     **** 
 142:../main.c     **** 					 DIGITAL_IO_SetOutputHigh(&MOTOR_LOW);
 685              	 .loc 5 142 0
 686 0074 1D48     	 ldr r0,.L20+20
 687 0076 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 143:../main.c     **** 					  vTaskDelay( xDelay );
 688              	 .loc 5 143 0
 689 007a 1423     	 movs r3,#20
 690 007c 1846     	 mov r0,r3
 691 007e FFF7FEFF 	 bl vTaskDelay
 692 0082 28E0     	 b .L17
 693              	.L18:
 144:../main.c     **** 			}
 145:../main.c     **** 
 146:../main.c     **** 			else{
 147:../main.c     **** 				//stop
 148:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x01, 0x00);
 694              	 .loc 5 148 0
 695 0084 1748     	 ldr r0,.L20+12
 696 0086 0121     	 movs r1,#1
 697 0088 0022     	 movs r2,#0
 698 008a FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 149:../main.c     **** 
 150:../main.c     **** 				  vTaskDelay( xDelay );
 699              	 .loc 5 150 0
 700 008e 1423     	 movs r3,#20
 701 0090 1846     	 mov r0,r3
 702 0092 FFF7FEFF 	 bl vTaskDelay
 151:../main.c     **** 					TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x02, 0x00);
 703              	 .loc 5 151 0
 704 0096 1348     	 ldr r0,.L20+12
 705 0098 0221     	 movs r1,#2
 706 009a 0022     	 movs r2,#0
 707 009c FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 152:../main.c     **** 					  vTaskDelay( xDelay );
 708              	 .loc 5 152 0
 709 00a0 1423     	 movs r3,#20
 710 00a2 1846     	 mov r0,r3
 711 00a4 FFF7FEFF 	 bl vTaskDelay
 153:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x03, 0x00);
 712              	 .loc 5 153 0
 713 00a8 0E48     	 ldr r0,.L20+12
 714 00aa 0321     	 movs r1,#3
 715 00ac 0022     	 movs r2,#0
 716 00ae FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 154:../main.c     **** 				  vTaskDelay( xDelay );
 717              	 .loc 5 154 0
 718 00b2 1423     	 movs r3,#20
 719 00b4 1846     	 mov r0,r3
 720 00b6 FFF7FEFF 	 bl vTaskDelay
 155:../main.c     **** 
 156:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_HIGH);
 721              	 .loc 5 156 0
 722 00ba 0B48     	 ldr r0,.L20+16
 723 00bc FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 157:../main.c     **** 					  vTaskDelay( xDelay );
 724              	 .loc 5 157 0
 725 00c0 1423     	 movs r3,#20
 726 00c2 1846     	 mov r0,r3
 727 00c4 FFF7FEFF 	 bl vTaskDelay
 158:../main.c     **** 
 159:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_LOW);
 728              	 .loc 5 159 0
 729 00c8 0848     	 ldr r0,.L20+20
 730 00ca FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 160:../main.c     **** 					  vTaskDelay( xDelay );
 731              	 .loc 5 160 0
 732 00ce 1423     	 movs r3,#20
 733 00d0 1846     	 mov r0,r3
 734 00d2 FFF7FEFF 	 bl vTaskDelay
 735              	.L17:
 161:../main.c     **** 
 162:../main.c     **** 			}
 163:../main.c     **** 		}
 164:../main.c     **** 	}
 736              	 .loc 5 164 0
 737 00d6 97E7     	 b .L19
 738              	.L21:
 739              	 .align 2
 740              	.L20:
 741 00d8 00000000 	 .word BACKWARD_interruptSemaphore
 742 00dc 00000000 	 .word DIRECTION_INTERRUPT
 743 00e0 00000000 	 .word pin_status
 744 00e4 00000000 	 .word TLE94112EL_0
 745 00e8 00000000 	 .word MOTOR_HIGH
 746 00ec 00000000 	 .word MOTOR_LOW
 747              	 .cfi_endproc
 748              	.LFE369:
 750              	 .section .text.LEFT_Task,"ax",%progbits
 751              	 .align 2
 752              	 .global LEFT_Task
 753              	 .thumb
 754              	 .thumb_func
 756              	LEFT_Task:
 757              	.LFB370:
 165:../main.c     **** }
 166:../main.c     **** 
 167:../main.c     **** void LEFT_Task(void *p){
 758              	 .loc 5 167 0
 759              	 .cfi_startproc
 760              	 
 761              	 
 762 0000 80B5     	 push {r7,lr}
 763              	.LCFI45:
 764              	 .cfi_def_cfa_offset 8
 765              	 .cfi_offset 7,-8
 766              	 .cfi_offset 14,-4
 767 0002 82B0     	 sub sp,sp,#8
 768              	.LCFI46:
 769              	 .cfi_def_cfa_offset 16
 770 0004 00AF     	 add r7,sp,#0
 771              	.LCFI47:
 772              	 .cfi_def_cfa_register 7
 773 0006 7860     	 str r0,[r7,#4]
 774              	.L25:
 168:../main.c     **** 
 169:../main.c     **** 	while(1){
 170:../main.c     **** 
 171:../main.c     **** 		if (xSemaphoreTake(LEFT_interruptSemaphore, portMAX_DELAY) == pdPASS){
 775              	 .loc 5 171 0
 776 0008 334B     	 ldr r3,.L26
 777 000a 1B68     	 ldr r3,[r3]
 778 000c 1846     	 mov r0,r3
 779 000e 4FF0FF31 	 mov r1,#-1
 780 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 781 0016 0346     	 mov r3,r0
 782 0018 012B     	 cmp r3,#1
 783 001a 5CD1     	 bne .L23
 172:../main.c     **** 
 173:../main.c     **** 			pin_status = PIN_INTERRUPT_GetPinValue(&DIRECTION_INTERRUPT);
 784              	 .loc 5 173 0
 785 001c 2F48     	 ldr r0,.L26+4
 786 001e FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 787 0022 0246     	 mov r2,r0
 788 0024 2E4B     	 ldr r3,.L26+8
 789 0026 1A60     	 str r2,[r3]
 174:../main.c     **** 			if(pin_status==1){
 790              	 .loc 5 174 0
 791 0028 2D4B     	 ldr r3,.L26+8
 792 002a 1B68     	 ldr r3,[r3]
 793 002c 012B     	 cmp r3,#1
 794 002e 29D1     	 bne .L24
 175:../main.c     **** 				//LEFT
 176:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x01, 0x66);
 795              	 .loc 5 176 0
 796 0030 2C48     	 ldr r0,.L26+12
 797 0032 0121     	 movs r1,#1
 798 0034 6622     	 movs r2,#102
 799 0036 FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 177:../main.c     **** 
 178:../main.c     **** 				  vTaskDelay( xDelay );
 800              	 .loc 5 178 0
 801 003a 1423     	 movs r3,#20
 802 003c 1846     	 mov r0,r3
 803 003e FFF7FEFF 	 bl vTaskDelay
 179:../main.c     **** 					TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x02, 0x99);
 804              	 .loc 5 179 0
 805 0042 2848     	 ldr r0,.L26+12
 806 0044 0221     	 movs r1,#2
 807 0046 9922     	 movs r2,#153
 808 0048 FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 180:../main.c     **** 					  vTaskDelay( xDelay );
 809              	 .loc 5 180 0
 810 004c 1423     	 movs r3,#20
 811 004e 1846     	 mov r0,r3
 812 0050 FFF7FEFF 	 bl vTaskDelay
 181:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x03, 0x99);
 813              	 .loc 5 181 0
 814 0054 2348     	 ldr r0,.L26+12
 815 0056 0321     	 movs r1,#3
 816 0058 9922     	 movs r2,#153
 817 005a FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 182:../main.c     **** 				  vTaskDelay( xDelay );
 818              	 .loc 5 182 0
 819 005e 1423     	 movs r3,#20
 820 0060 1846     	 mov r0,r3
 821 0062 FFF7FEFF 	 bl vTaskDelay
 183:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_HIGH);
 822              	 .loc 5 183 0
 823 0066 2048     	 ldr r0,.L26+16
 824 0068 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 184:../main.c     **** 					  vTaskDelay( xDelay );
 825              	 .loc 5 184 0
 826 006c 1423     	 movs r3,#20
 827 006e 1846     	 mov r0,r3
 828 0070 FFF7FEFF 	 bl vTaskDelay
 185:../main.c     **** 
 186:../main.c     **** 					 DIGITAL_IO_SetOutputHigh(&MOTOR_LOW);
 829              	 .loc 5 186 0
 830 0074 1D48     	 ldr r0,.L26+20
 831 0076 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 187:../main.c     **** 					  vTaskDelay( xDelay );
 832              	 .loc 5 187 0
 833 007a 1423     	 movs r3,#20
 834 007c 1846     	 mov r0,r3
 835 007e FFF7FEFF 	 bl vTaskDelay
 836 0082 28E0     	 b .L23
 837              	.L24:
 188:../main.c     **** 			}
 189:../main.c     **** 
 190:../main.c     **** 			else{
 191:../main.c     **** 				//stop
 192:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x01, 0x00);
 838              	 .loc 5 192 0
 839 0084 1748     	 ldr r0,.L26+12
 840 0086 0121     	 movs r1,#1
 841 0088 0022     	 movs r2,#0
 842 008a FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 193:../main.c     **** 
 194:../main.c     **** 				  vTaskDelay( xDelay );
 843              	 .loc 5 194 0
 844 008e 1423     	 movs r3,#20
 845 0090 1846     	 mov r0,r3
 846 0092 FFF7FEFF 	 bl vTaskDelay
 195:../main.c     **** 					TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x02, 0x00);
 847              	 .loc 5 195 0
 848 0096 1348     	 ldr r0,.L26+12
 849 0098 0221     	 movs r1,#2
 850 009a 0022     	 movs r2,#0
 851 009c FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 196:../main.c     **** 					  vTaskDelay( xDelay );
 852              	 .loc 5 196 0
 853 00a0 1423     	 movs r3,#20
 854 00a2 1846     	 mov r0,r3
 855 00a4 FFF7FEFF 	 bl vTaskDelay
 197:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x03, 0x00);
 856              	 .loc 5 197 0
 857 00a8 0E48     	 ldr r0,.L26+12
 858 00aa 0321     	 movs r1,#3
 859 00ac 0022     	 movs r2,#0
 860 00ae FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 198:../main.c     **** 				  vTaskDelay( xDelay );
 861              	 .loc 5 198 0
 862 00b2 1423     	 movs r3,#20
 863 00b4 1846     	 mov r0,r3
 864 00b6 FFF7FEFF 	 bl vTaskDelay
 199:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_HIGH);
 865              	 .loc 5 199 0
 866 00ba 0B48     	 ldr r0,.L26+16
 867 00bc FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 200:../main.c     **** 					  vTaskDelay( xDelay );
 868              	 .loc 5 200 0
 869 00c0 1423     	 movs r3,#20
 870 00c2 1846     	 mov r0,r3
 871 00c4 FFF7FEFF 	 bl vTaskDelay
 201:../main.c     **** 
 202:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_LOW);
 872              	 .loc 5 202 0
 873 00c8 0848     	 ldr r0,.L26+20
 874 00ca FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 203:../main.c     **** 					  vTaskDelay( xDelay );
 875              	 .loc 5 203 0
 876 00ce 1423     	 movs r3,#20
 877 00d0 1846     	 mov r0,r3
 878 00d2 FFF7FEFF 	 bl vTaskDelay
 879              	.L23:
 204:../main.c     **** 			}
 205:../main.c     **** 		}
 206:../main.c     **** 	}
 880              	 .loc 5 206 0
 881 00d6 97E7     	 b .L25
 882              	.L27:
 883              	 .align 2
 884              	.L26:
 885 00d8 00000000 	 .word LEFT_interruptSemaphore
 886 00dc 00000000 	 .word DIRECTION_INTERRUPT
 887 00e0 00000000 	 .word pin_status
 888 00e4 00000000 	 .word TLE94112EL_0
 889 00e8 00000000 	 .word MOTOR_HIGH
 890 00ec 00000000 	 .word MOTOR_LOW
 891              	 .cfi_endproc
 892              	.LFE370:
 894              	 .section .text.RIGHT_Task,"ax",%progbits
 895              	 .align 2
 896              	 .global RIGHT_Task
 897              	 .thumb
 898              	 .thumb_func
 900              	RIGHT_Task:
 901              	.LFB371:
 207:../main.c     **** }
 208:../main.c     **** 
 209:../main.c     **** void RIGHT_Task(void *p){
 902              	 .loc 5 209 0
 903              	 .cfi_startproc
 904              	 
 905              	 
 906 0000 80B5     	 push {r7,lr}
 907              	.LCFI48:
 908              	 .cfi_def_cfa_offset 8
 909              	 .cfi_offset 7,-8
 910              	 .cfi_offset 14,-4
 911 0002 82B0     	 sub sp,sp,#8
 912              	.LCFI49:
 913              	 .cfi_def_cfa_offset 16
 914 0004 00AF     	 add r7,sp,#0
 915              	.LCFI50:
 916              	 .cfi_def_cfa_register 7
 917 0006 7860     	 str r0,[r7,#4]
 918              	.L31:
 210:../main.c     **** 
 211:../main.c     **** 	while(1){
 212:../main.c     **** 
 213:../main.c     **** 		if (xSemaphoreTake(RIGHT_interruptSemaphore, portMAX_DELAY) == pdPASS){
 919              	 .loc 5 213 0
 920 0008 334B     	 ldr r3,.L32
 921 000a 1B68     	 ldr r3,[r3]
 922 000c 1846     	 mov r0,r3
 923 000e 4FF0FF31 	 mov r1,#-1
 924 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 925 0016 0346     	 mov r3,r0
 926 0018 012B     	 cmp r3,#1
 927 001a 5CD1     	 bne .L29
 214:../main.c     **** 
 215:../main.c     **** 			pin_status = PIN_INTERRUPT_GetPinValue(&DIRECTION_INTERRUPT);
 928              	 .loc 5 215 0
 929 001c 2F48     	 ldr r0,.L32+4
 930 001e FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 931 0022 0246     	 mov r2,r0
 932 0024 2E4B     	 ldr r3,.L32+8
 933 0026 1A60     	 str r2,[r3]
 216:../main.c     **** 			if(pin_status==1){
 934              	 .loc 5 216 0
 935 0028 2D4B     	 ldr r3,.L32+8
 936 002a 1B68     	 ldr r3,[r3]
 937 002c 012B     	 cmp r3,#1
 938 002e 29D1     	 bne .L30
 217:../main.c     **** 				//RIGHT
 218:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x01, 0x99);
 939              	 .loc 5 218 0
 940 0030 2C48     	 ldr r0,.L32+12
 941 0032 0121     	 movs r1,#1
 942 0034 9922     	 movs r2,#153
 943 0036 FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 219:../main.c     **** 
 220:../main.c     **** 				  vTaskDelay( xDelay );
 944              	 .loc 5 220 0
 945 003a 1423     	 movs r3,#20
 946 003c 1846     	 mov r0,r3
 947 003e FFF7FEFF 	 bl vTaskDelay
 221:../main.c     **** 					TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x02, 0x66);
 948              	 .loc 5 221 0
 949 0042 2848     	 ldr r0,.L32+12
 950 0044 0221     	 movs r1,#2
 951 0046 6622     	 movs r2,#102
 952 0048 FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 222:../main.c     **** 					  vTaskDelay( xDelay );
 953              	 .loc 5 222 0
 954 004c 1423     	 movs r3,#20
 955 004e 1846     	 mov r0,r3
 956 0050 FFF7FEFF 	 bl vTaskDelay
 223:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x03, 0x66);
 957              	 .loc 5 223 0
 958 0054 2348     	 ldr r0,.L32+12
 959 0056 0321     	 movs r1,#3
 960 0058 6622     	 movs r2,#102
 961 005a FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 224:../main.c     **** 				  vTaskDelay( xDelay );
 962              	 .loc 5 224 0
 963 005e 1423     	 movs r3,#20
 964 0060 1846     	 mov r0,r3
 965 0062 FFF7FEFF 	 bl vTaskDelay
 225:../main.c     **** 					 DIGITAL_IO_SetOutputHigh(&MOTOR_HIGH);
 966              	 .loc 5 225 0
 967 0066 2048     	 ldr r0,.L32+16
 968 0068 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 226:../main.c     **** 					  vTaskDelay( xDelay );
 969              	 .loc 5 226 0
 970 006c 1423     	 movs r3,#20
 971 006e 1846     	 mov r0,r3
 972 0070 FFF7FEFF 	 bl vTaskDelay
 227:../main.c     **** 
 228:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_LOW);
 973              	 .loc 5 228 0
 974 0074 1D48     	 ldr r0,.L32+20
 975 0076 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 229:../main.c     **** 					  vTaskDelay( xDelay );
 976              	 .loc 5 229 0
 977 007a 1423     	 movs r3,#20
 978 007c 1846     	 mov r0,r3
 979 007e FFF7FEFF 	 bl vTaskDelay
 980 0082 28E0     	 b .L29
 981              	.L30:
 230:../main.c     **** 			}
 231:../main.c     **** 
 232:../main.c     **** 			else{
 233:../main.c     **** 				//stop
 234:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x01, 0x00);
 982              	 .loc 5 234 0
 983 0084 1748     	 ldr r0,.L32+12
 984 0086 0121     	 movs r1,#1
 985 0088 0022     	 movs r2,#0
 986 008a FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 235:../main.c     **** 
 236:../main.c     **** 				  vTaskDelay( xDelay );
 987              	 .loc 5 236 0
 988 008e 1423     	 movs r3,#20
 989 0090 1846     	 mov r0,r3
 990 0092 FFF7FEFF 	 bl vTaskDelay
 237:../main.c     **** 					TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x02, 0x00);
 991              	 .loc 5 237 0
 992 0096 1348     	 ldr r0,.L32+12
 993 0098 0221     	 movs r1,#2
 994 009a 0022     	 movs r2,#0
 995 009c FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 238:../main.c     **** 					  vTaskDelay( xDelay );
 996              	 .loc 5 238 0
 997 00a0 1423     	 movs r3,#20
 998 00a2 1846     	 mov r0,r3
 999 00a4 FFF7FEFF 	 bl vTaskDelay
 239:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x03, 0x00);
 1000              	 .loc 5 239 0
 1001 00a8 0E48     	 ldr r0,.L32+12
 1002 00aa 0321     	 movs r1,#3
 1003 00ac 0022     	 movs r2,#0
 1004 00ae FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 240:../main.c     **** 				  vTaskDelay( xDelay );
 1005              	 .loc 5 240 0
 1006 00b2 1423     	 movs r3,#20
 1007 00b4 1846     	 mov r0,r3
 1008 00b6 FFF7FEFF 	 bl vTaskDelay
 241:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_HIGH);
 1009              	 .loc 5 241 0
 1010 00ba 0B48     	 ldr r0,.L32+16
 1011 00bc FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 242:../main.c     **** 					  vTaskDelay( xDelay );
 1012              	 .loc 5 242 0
 1013 00c0 1423     	 movs r3,#20
 1014 00c2 1846     	 mov r0,r3
 1015 00c4 FFF7FEFF 	 bl vTaskDelay
 243:../main.c     **** 
 244:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_LOW);
 1016              	 .loc 5 244 0
 1017 00c8 0848     	 ldr r0,.L32+20
 1018 00ca FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 245:../main.c     **** 					  vTaskDelay( xDelay );
 1019              	 .loc 5 245 0
 1020 00ce 1423     	 movs r3,#20
 1021 00d0 1846     	 mov r0,r3
 1022 00d2 FFF7FEFF 	 bl vTaskDelay
 1023              	.L29:
 246:../main.c     **** 			}
 247:../main.c     **** 		}
 248:../main.c     **** 	}
 1024              	 .loc 5 248 0
 1025 00d6 97E7     	 b .L31
 1026              	.L33:
 1027              	 .align 2
 1028              	.L32:
 1029 00d8 00000000 	 .word RIGHT_interruptSemaphore
 1030 00dc 00000000 	 .word DIRECTION_INTERRUPT
 1031 00e0 00000000 	 .word pin_status
 1032 00e4 00000000 	 .word TLE94112EL_0
 1033 00e8 00000000 	 .word MOTOR_HIGH
 1034 00ec 00000000 	 .word MOTOR_LOW
 1035              	 .cfi_endproc
 1036              	.LFE371:
 1038              	 .section .text.UP_Task,"ax",%progbits
 1039              	 .align 2
 1040              	 .global UP_Task
 1041              	 .thumb
 1042              	 .thumb_func
 1044              	UP_Task:
 1045              	.LFB372:
 249:../main.c     **** }
 250:../main.c     **** 
 251:../main.c     **** void UP_Task(void *p){
 1046              	 .loc 5 251 0
 1047              	 .cfi_startproc
 1048              	 
 1049              	 
 1050 0000 80B5     	 push {r7,lr}
 1051              	.LCFI51:
 1052              	 .cfi_def_cfa_offset 8
 1053              	 .cfi_offset 7,-8
 1054              	 .cfi_offset 14,-4
 1055 0002 82B0     	 sub sp,sp,#8
 1056              	.LCFI52:
 1057              	 .cfi_def_cfa_offset 16
 1058 0004 00AF     	 add r7,sp,#0
 1059              	.LCFI53:
 1060              	 .cfi_def_cfa_register 7
 1061 0006 7860     	 str r0,[r7,#4]
 1062              	.L36:
 252:../main.c     **** 
 253:../main.c     **** 	while(1){
 254:../main.c     **** 
 255:../main.c     **** 		if (xSemaphoreTake(UP_interruptSemaphore, portMAX_DELAY) == pdPASS){
 1063              	 .loc 5 255 0
 1064 0008 1E4B     	 ldr r3,.L37
 1065 000a 1B68     	 ldr r3,[r3]
 1066 000c 1846     	 mov r0,r3
 1067 000e 4FF0FF31 	 mov r1,#-1
 1068 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 1069 0016 0346     	 mov r3,r0
 1070 0018 012B     	 cmp r3,#1
 1071 001a 31D1     	 bne .L35
 256:../main.c     **** 
 257:../main.c     **** 	 	  	// sets the duty to 3%.
 258:../main.c     **** 	    	// LIFT UP
 259:../main.c     **** 			PWM_SetDutyCycle(&PWM_LIFT,800);
 1072              	 .loc 5 259 0
 1073 001c 1A48     	 ldr r0,.L37+4
 1074 001e 4FF44871 	 mov r1,#800
 1075 0022 FFF7FEFF 	 bl PWM_SetDutyCycle
 260:../main.c     **** 			vTaskDelay( xDelay );
 1076              	 .loc 5 260 0
 1077 0026 1423     	 movs r3,#20
 1078 0028 1846     	 mov r0,r3
 1079 002a FFF7FEFF 	 bl vTaskDelay
 261:../main.c     **** 			PWM_SetDutyCycle(&PWM_LIFT,700);
 1080              	 .loc 5 261 0
 1081 002e 1648     	 ldr r0,.L37+4
 1082 0030 4FF42F71 	 mov r1,#700
 1083 0034 FFF7FEFF 	 bl PWM_SetDutyCycle
 262:../main.c     **** 			vTaskDelay( xDelay );
 1084              	 .loc 5 262 0
 1085 0038 1423     	 movs r3,#20
 1086 003a 1846     	 mov r0,r3
 1087 003c FFF7FEFF 	 bl vTaskDelay
 263:../main.c     **** 			PWM_SetDutyCycle(&PWM_LIFT,600);
 1088              	 .loc 5 263 0
 1089 0040 1148     	 ldr r0,.L37+4
 1090 0042 4FF41671 	 mov r1,#600
 1091 0046 FFF7FEFF 	 bl PWM_SetDutyCycle
 264:../main.c     **** 			vTaskDelay( xDelay );
 1092              	 .loc 5 264 0
 1093 004a 1423     	 movs r3,#20
 1094 004c 1846     	 mov r0,r3
 1095 004e FFF7FEFF 	 bl vTaskDelay
 265:../main.c     **** 			PWM_SetDutyCycle(&PWM_LIFT,500);
 1096              	 .loc 5 265 0
 1097 0052 0D48     	 ldr r0,.L37+4
 1098 0054 4FF4FA71 	 mov r1,#500
 1099 0058 FFF7FEFF 	 bl PWM_SetDutyCycle
 266:../main.c     **** 			vTaskDelay( xDelay );
 1100              	 .loc 5 266 0
 1101 005c 1423     	 movs r3,#20
 1102 005e 1846     	 mov r0,r3
 1103 0060 FFF7FEFF 	 bl vTaskDelay
 267:../main.c     **** 			PWM_SetDutyCycle(&PWM_LIFT,400);
 1104              	 .loc 5 267 0
 1105 0064 0848     	 ldr r0,.L37+4
 1106 0066 4FF4C871 	 mov r1,#400
 1107 006a FFF7FEFF 	 bl PWM_SetDutyCycle
 268:../main.c     **** 			vTaskDelay( xDelay );
 1108              	 .loc 5 268 0
 1109 006e 1423     	 movs r3,#20
 1110 0070 1846     	 mov r0,r3
 1111 0072 FFF7FEFF 	 bl vTaskDelay
 269:../main.c     **** 			PWM_SetDutyCycle(&PWM_LIFT,300);
 1112              	 .loc 5 269 0
 1113 0076 0448     	 ldr r0,.L37+4
 1114 0078 4FF49671 	 mov r1,#300
 1115 007c FFF7FEFF 	 bl PWM_SetDutyCycle
 1116              	.L35:
 270:../main.c     **** 
 271:../main.c     **** 		}
 272:../main.c     **** 	}
 1117              	 .loc 5 272 0
 1118 0080 C2E7     	 b .L36
 1119              	.L38:
 1120 0082 00BF     	 .align 2
 1121              	.L37:
 1122 0084 00000000 	 .word UP_interruptSemaphore
 1123 0088 00000000 	 .word PWM_LIFT
 1124              	 .cfi_endproc
 1125              	.LFE372:
 1127              	 .section .text.DOWN_Task,"ax",%progbits
 1128              	 .align 2
 1129              	 .global DOWN_Task
 1130              	 .thumb
 1131              	 .thumb_func
 1133              	DOWN_Task:
 1134              	.LFB373:
 273:../main.c     **** }
 274:../main.c     **** 
 275:../main.c     **** void DOWN_Task(void *p){
 1135              	 .loc 5 275 0
 1136              	 .cfi_startproc
 1137              	 
 1138              	 
 1139 0000 80B5     	 push {r7,lr}
 1140              	.LCFI54:
 1141              	 .cfi_def_cfa_offset 8
 1142              	 .cfi_offset 7,-8
 1143              	 .cfi_offset 14,-4
 1144 0002 82B0     	 sub sp,sp,#8
 1145              	.LCFI55:
 1146              	 .cfi_def_cfa_offset 16
 1147 0004 00AF     	 add r7,sp,#0
 1148              	.LCFI56:
 1149              	 .cfi_def_cfa_register 7
 1150 0006 7860     	 str r0,[r7,#4]
 1151              	.L41:
 276:../main.c     **** 
 277:../main.c     **** 	while(1){
 278:../main.c     **** 
 279:../main.c     **** 		if (xSemaphoreTake(DOWN_interruptSemaphore, portMAX_DELAY) == pdPASS){
 1152              	 .loc 5 279 0
 1153 0008 1E4B     	 ldr r3,.L42
 1154 000a 1B68     	 ldr r3,[r3]
 1155 000c 1846     	 mov r0,r3
 1156 000e 4FF0FF31 	 mov r1,#-1
 1157 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 1158 0016 0346     	 mov r3,r0
 1159 0018 012B     	 cmp r3,#1
 1160 001a 31D1     	 bne .L40
 280:../main.c     **** 
 281:../main.c     **** 	 	  	// sets the duty to 9 %.
 282:../main.c     **** 	    	// LIFT DOWN
 283:../main.c     **** 			PWM_SetDutyCycle(&PWM_LIFT,400);
 1161              	 .loc 5 283 0
 1162 001c 1A48     	 ldr r0,.L42+4
 1163 001e 4FF4C871 	 mov r1,#400
 1164 0022 FFF7FEFF 	 bl PWM_SetDutyCycle
 284:../main.c     **** 			vTaskDelay( xDelay );
 1165              	 .loc 5 284 0
 1166 0026 1423     	 movs r3,#20
 1167 0028 1846     	 mov r0,r3
 1168 002a FFF7FEFF 	 bl vTaskDelay
 285:../main.c     **** 			PWM_SetDutyCycle(&PWM_LIFT,500);
 1169              	 .loc 5 285 0
 1170 002e 1648     	 ldr r0,.L42+4
 1171 0030 4FF4FA71 	 mov r1,#500
 1172 0034 FFF7FEFF 	 bl PWM_SetDutyCycle
 286:../main.c     **** 			vTaskDelay( xDelay );
 1173              	 .loc 5 286 0
 1174 0038 1423     	 movs r3,#20
 1175 003a 1846     	 mov r0,r3
 1176 003c FFF7FEFF 	 bl vTaskDelay
 287:../main.c     **** 			PWM_SetDutyCycle(&PWM_LIFT,600);
 1177              	 .loc 5 287 0
 1178 0040 1148     	 ldr r0,.L42+4
 1179 0042 4FF41671 	 mov r1,#600
 1180 0046 FFF7FEFF 	 bl PWM_SetDutyCycle
 288:../main.c     **** 			vTaskDelay( xDelay );
 1181              	 .loc 5 288 0
 1182 004a 1423     	 movs r3,#20
 1183 004c 1846     	 mov r0,r3
 1184 004e FFF7FEFF 	 bl vTaskDelay
 289:../main.c     **** 	    	PWM_SetDutyCycle(&PWM_LIFT,700);
 1185              	 .loc 5 289 0
 1186 0052 0D48     	 ldr r0,.L42+4
 1187 0054 4FF42F71 	 mov r1,#700
 1188 0058 FFF7FEFF 	 bl PWM_SetDutyCycle
 290:../main.c     **** 	    	vTaskDelay( xDelay );
 1189              	 .loc 5 290 0
 1190 005c 1423     	 movs r3,#20
 1191 005e 1846     	 mov r0,r3
 1192 0060 FFF7FEFF 	 bl vTaskDelay
 291:../main.c     **** 	    	PWM_SetDutyCycle(&PWM_LIFT,800);
 1193              	 .loc 5 291 0
 1194 0064 0848     	 ldr r0,.L42+4
 1195 0066 4FF44871 	 mov r1,#800
 1196 006a FFF7FEFF 	 bl PWM_SetDutyCycle
 292:../main.c     **** 	    	vTaskDelay( xDelay );
 1197              	 .loc 5 292 0
 1198 006e 1423     	 movs r3,#20
 1199 0070 1846     	 mov r0,r3
 1200 0072 FFF7FEFF 	 bl vTaskDelay
 293:../main.c     **** 	    	PWM_SetDutyCycle(&PWM_LIFT,900);
 1201              	 .loc 5 293 0
 1202 0076 0448     	 ldr r0,.L42+4
 1203 0078 4FF46171 	 mov r1,#900
 1204 007c FFF7FEFF 	 bl PWM_SetDutyCycle
 1205              	.L40:
 294:../main.c     **** 
 295:../main.c     **** 		}
 296:../main.c     **** 	}
 1206              	 .loc 5 296 0
 1207 0080 C2E7     	 b .L41
 1208              	.L43:
 1209 0082 00BF     	 .align 2
 1210              	.L42:
 1211 0084 00000000 	 .word DOWN_interruptSemaphore
 1212 0088 00000000 	 .word PWM_LIFT
 1213              	 .cfi_endproc
 1214              	.LFE373:
 1216              	 .section .text.OPEN_Task,"ax",%progbits
 1217              	 .align 2
 1218              	 .global OPEN_Task
 1219              	 .thumb
 1220              	 .thumb_func
 1222              	OPEN_Task:
 1223              	.LFB374:
 297:../main.c     **** }
 298:../main.c     **** 
 299:../main.c     **** void OPEN_Task(void *p){
 1224              	 .loc 5 299 0
 1225              	 .cfi_startproc
 1226              	 
 1227              	 
 1228 0000 80B5     	 push {r7,lr}
 1229              	.LCFI57:
 1230              	 .cfi_def_cfa_offset 8
 1231              	 .cfi_offset 7,-8
 1232              	 .cfi_offset 14,-4
 1233 0002 82B0     	 sub sp,sp,#8
 1234              	.LCFI58:
 1235              	 .cfi_def_cfa_offset 16
 1236 0004 00AF     	 add r7,sp,#0
 1237              	.LCFI59:
 1238              	 .cfi_def_cfa_register 7
 1239 0006 7860     	 str r0,[r7,#4]
 1240              	.L48:
 300:../main.c     **** 
 301:../main.c     **** 	while(1){
 302:../main.c     **** 
 303:../main.c     **** 		if (xSemaphoreTake(OPEN_interruptSemaphore, portMAX_DELAY) == pdPASS){
 1241              	 .loc 5 303 0
 1242 0008 104B     	 ldr r3,.L49
 1243 000a 1B68     	 ldr r3,[r3]
 1244 000c 1846     	 mov r0,r3
 1245 000e 4FF0FF31 	 mov r1,#-1
 1246 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 1247 0016 0346     	 mov r3,r0
 1248 0018 012B     	 cmp r3,#1
 1249 001a 15D1     	 bne .L45
 304:../main.c     **** 
 305:../main.c     **** 			pin_status = PIN_INTERRUPT_GetPinValue(&CLAMP_INTERRUPT);
 1250              	 .loc 5 305 0
 1251 001c 0C48     	 ldr r0,.L49+4
 1252 001e FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 1253 0022 0246     	 mov r2,r0
 1254 0024 0B4B     	 ldr r3,.L49+8
 1255 0026 1A60     	 str r2,[r3]
 306:../main.c     **** 		     if(pin_status == 1)
 1256              	 .loc 5 306 0
 1257 0028 0A4B     	 ldr r3,.L49+8
 1258 002a 1B68     	 ldr r3,[r3]
 1259 002c 012B     	 cmp r3,#1
 1260 002e 04D1     	 bne .L46
 307:../main.c     **** 		     {
 308:../main.c     **** 		 	  	// sets the duty to 2%.
 309:../main.c     **** 		    	// clamp open
 310:../main.c     **** 		    	 PWM_SetDutyCycle(&PWM_CLAMP,200);
 1261              	 .loc 5 310 0
 1262 0030 0948     	 ldr r0,.L49+12
 1263 0032 C821     	 movs r1,#200
 1264 0034 FFF7FEFF 	 bl PWM_SetDutyCycle
 1265 0038 03E0     	 b .L47
 1266              	.L46:
 311:../main.c     **** 		     }
 312:../main.c     **** 
 313:../main.c     **** 		     else
 314:../main.c     **** 		     {
 315:../main.c     **** 		    	 // sets the channel duty to 0%.
 316:../main.c     **** 		    	 // clamp maintain
 317:../main.c     **** 		    	 PWM_SetDutyCycle(&PWM_CLAMP,0);
 1267              	 .loc 5 317 0
 1268 003a 0748     	 ldr r0,.L49+12
 1269 003c 0021     	 movs r1,#0
 1270 003e FFF7FEFF 	 bl PWM_SetDutyCycle
 1271              	.L47:
 318:../main.c     **** 		     }
 319:../main.c     **** 
 320:../main.c     **** 		 	pin_status = 0;
 1272              	 .loc 5 320 0
 1273 0042 044B     	 ldr r3,.L49+8
 1274 0044 0022     	 movs r2,#0
 1275 0046 1A60     	 str r2,[r3]
 1276              	.L45:
 321:../main.c     **** 
 322:../main.c     **** 		}
 323:../main.c     **** 	}
 1277              	 .loc 5 323 0
 1278 0048 DEE7     	 b .L48
 1279              	.L50:
 1280 004a 00BF     	 .align 2
 1281              	.L49:
 1282 004c 00000000 	 .word OPEN_interruptSemaphore
 1283 0050 00000000 	 .word CLAMP_INTERRUPT
 1284 0054 00000000 	 .word pin_status
 1285 0058 00000000 	 .word PWM_CLAMP
 1286              	 .cfi_endproc
 1287              	.LFE374:
 1289              	 .section .text.CLOSE_Task,"ax",%progbits
 1290              	 .align 2
 1291              	 .global CLOSE_Task
 1292              	 .thumb
 1293              	 .thumb_func
 1295              	CLOSE_Task:
 1296              	.LFB375:
 324:../main.c     **** }
 325:../main.c     **** 
 326:../main.c     **** void CLOSE_Task(void *p){
 1297              	 .loc 5 326 0
 1298              	 .cfi_startproc
 1299              	 
 1300              	 
 1301 0000 80B5     	 push {r7,lr}
 1302              	.LCFI60:
 1303              	 .cfi_def_cfa_offset 8
 1304              	 .cfi_offset 7,-8
 1305              	 .cfi_offset 14,-4
 1306 0002 82B0     	 sub sp,sp,#8
 1307              	.LCFI61:
 1308              	 .cfi_def_cfa_offset 16
 1309 0004 00AF     	 add r7,sp,#0
 1310              	.LCFI62:
 1311              	 .cfi_def_cfa_register 7
 1312 0006 7860     	 str r0,[r7,#4]
 1313              	.L55:
 327:../main.c     **** 
 328:../main.c     **** 	while(1){
 329:../main.c     **** 
 330:../main.c     **** 		if (xSemaphoreTake(CLOSE_interruptSemaphore, portMAX_DELAY) == pdPASS){
 1314              	 .loc 5 330 0
 1315 0008 114B     	 ldr r3,.L56
 1316 000a 1B68     	 ldr r3,[r3]
 1317 000c 1846     	 mov r0,r3
 1318 000e 4FF0FF31 	 mov r1,#-1
 1319 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 1320 0016 0346     	 mov r3,r0
 1321 0018 012B     	 cmp r3,#1
 1322 001a 17D1     	 bne .L52
 331:../main.c     **** 
 332:../main.c     **** 			pin_status = PIN_INTERRUPT_GetPinValue(&CLAMP_INTERRUPT);
 1323              	 .loc 5 332 0
 1324 001c 0D48     	 ldr r0,.L56+4
 1325 001e FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 1326 0022 0246     	 mov r2,r0
 1327 0024 0C4B     	 ldr r3,.L56+8
 1328 0026 1A60     	 str r2,[r3]
 333:../main.c     **** 		     if(pin_status == 1)
 1329              	 .loc 5 333 0
 1330 0028 0B4B     	 ldr r3,.L56+8
 1331 002a 1B68     	 ldr r3,[r3]
 1332 002c 012B     	 cmp r3,#1
 1333 002e 05D1     	 bne .L53
 334:../main.c     **** 		     {
 335:../main.c     **** 		 	  	// sets the duty to 12%.
 336:../main.c     **** 		    	// clamp CLOSE
 337:../main.c     **** 		    	 PWM_SetDutyCycle(&PWM_CLAMP,1200);
 1334              	 .loc 5 337 0
 1335 0030 0A48     	 ldr r0,.L56+12
 1336 0032 4FF49661 	 mov r1,#1200
 1337 0036 FFF7FEFF 	 bl PWM_SetDutyCycle
 1338 003a 04E0     	 b .L54
 1339              	.L53:
 338:../main.c     **** 		     }
 339:../main.c     **** 
 340:../main.c     **** 		     else
 341:../main.c     **** 		     {
 342:../main.c     **** 		    	 // sets the channel duty to 10%.
 343:../main.c     **** 		    	 // clamp maintain
 344:../main.c     **** 		    	 PWM_SetDutyCycle(&PWM_CLAMP,1000);
 1340              	 .loc 5 344 0
 1341 003c 0748     	 ldr r0,.L56+12
 1342 003e 4FF47A71 	 mov r1,#1000
 1343 0042 FFF7FEFF 	 bl PWM_SetDutyCycle
 1344              	.L54:
 345:../main.c     **** 		     }
 346:../main.c     **** 
 347:../main.c     **** 		 	pin_status = 0;
 1345              	 .loc 5 347 0
 1346 0046 044B     	 ldr r3,.L56+8
 1347 0048 0022     	 movs r2,#0
 1348 004a 1A60     	 str r2,[r3]
 1349              	.L52:
 348:../main.c     **** 
 349:../main.c     **** 		}
 350:../main.c     **** 	}
 1350              	 .loc 5 350 0
 1351 004c DCE7     	 b .L55
 1352              	.L57:
 1353 004e 00BF     	 .align 2
 1354              	.L56:
 1355 0050 00000000 	 .word CLOSE_interruptSemaphore
 1356 0054 00000000 	 .word CLAMP_INTERRUPT
 1357 0058 00000000 	 .word pin_status
 1358 005c 00000000 	 .word PWM_CLAMP
 1359              	 .cfi_endproc
 1360              	.LFE375:
 1362              	 .section .text.ROTATE_Task,"ax",%progbits
 1363              	 .align 2
 1364              	 .global ROTATE_Task
 1365              	 .thumb
 1366              	 .thumb_func
 1368              	ROTATE_Task:
 1369              	.LFB376:
 351:../main.c     **** }
 352:../main.c     **** 
 353:../main.c     **** void ROTATE_Task(void *p){
 1370              	 .loc 5 353 0
 1371              	 .cfi_startproc
 1372              	 
 1373              	 
 1374 0000 80B5     	 push {r7,lr}
 1375              	.LCFI63:
 1376              	 .cfi_def_cfa_offset 8
 1377              	 .cfi_offset 7,-8
 1378              	 .cfi_offset 14,-4
 1379 0002 82B0     	 sub sp,sp,#8
 1380              	.LCFI64:
 1381              	 .cfi_def_cfa_offset 16
 1382 0004 00AF     	 add r7,sp,#0
 1383              	.LCFI65:
 1384              	 .cfi_def_cfa_register 7
 1385 0006 7860     	 str r0,[r7,#4]
 1386              	.L61:
 354:../main.c     **** 
 355:../main.c     **** 	while(1){
 356:../main.c     **** 
 357:../main.c     **** 		if (xSemaphoreTake(ROTATE_interruptSemaphore, portMAX_DELAY) == pdPASS){
 1387              	 .loc 5 357 0
 1388 0008 464B     	 ldr r3,.L62
 1389 000a 1B68     	 ldr r3,[r3]
 1390 000c 1846     	 mov r0,r3
 1391 000e 4FF0FF31 	 mov r1,#-1
 1392 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 1393 0016 0346     	 mov r3,r0
 1394 0018 012B     	 cmp r3,#1
 1395 001a 40F08180 	 bne .L59
 358:../main.c     **** 
 359:../main.c     **** 			pin_status = PIN_INTERRUPT_GetPinValue(&ROTATE_INTERRUPT);
 1396              	 .loc 5 359 0
 1397 001e 4248     	 ldr r0,.L62+4
 1398 0020 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 1399 0024 0246     	 mov r2,r0
 1400 0026 414B     	 ldr r3,.L62+8
 1401 0028 1A60     	 str r2,[r3]
 360:../main.c     **** 		     if(pin_status == 1)
 1402              	 .loc 5 360 0
 1403 002a 404B     	 ldr r3,.L62+8
 1404 002c 1B68     	 ldr r3,[r3]
 1405 002e 012B     	 cmp r3,#1
 1406 0030 3FD1     	 bne .L60
 361:../main.c     **** 		     {
 362:../main.c     **** 				 BUS_IO_Write(&LED_BUS_IO, green_led);	//LED INDICATOR
 1407              	 .loc 5 362 0
 1408 0032 FF23     	 movs r3,#255
 1409 0034 3E48     	 ldr r0,.L62+12
 1410 0036 1946     	 mov r1,r3
 1411 0038 FFF7FEFF 	 bl BUS_IO_Write
 363:../main.c     **** 				// sets the duty to 3%.
 364:../main.c     **** 				// Metal
 365:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,800);
 1412              	 .loc 5 365 0
 1413 003c 3D48     	 ldr r0,.L62+16
 1414 003e 4FF44871 	 mov r1,#800
 1415 0042 FFF7FEFF 	 bl PWM_SetDutyCycle
 366:../main.c     **** 				vTaskDelay( xDelay );
 1416              	 .loc 5 366 0
 1417 0046 1423     	 movs r3,#20
 1418 0048 1846     	 mov r0,r3
 1419 004a FFF7FEFF 	 bl vTaskDelay
 367:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,700);
 1420              	 .loc 5 367 0
 1421 004e 3948     	 ldr r0,.L62+16
 1422 0050 4FF42F71 	 mov r1,#700
 1423 0054 FFF7FEFF 	 bl PWM_SetDutyCycle
 368:../main.c     **** 				vTaskDelay( xDelay );
 1424              	 .loc 5 368 0
 1425 0058 1423     	 movs r3,#20
 1426 005a 1846     	 mov r0,r3
 1427 005c FFF7FEFF 	 bl vTaskDelay
 369:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,600);
 1428              	 .loc 5 369 0
 1429 0060 3448     	 ldr r0,.L62+16
 1430 0062 4FF41671 	 mov r1,#600
 1431 0066 FFF7FEFF 	 bl PWM_SetDutyCycle
 370:../main.c     **** 				vTaskDelay( xDelay );
 1432              	 .loc 5 370 0
 1433 006a 1423     	 movs r3,#20
 1434 006c 1846     	 mov r0,r3
 1435 006e FFF7FEFF 	 bl vTaskDelay
 371:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,500);
 1436              	 .loc 5 371 0
 1437 0072 3048     	 ldr r0,.L62+16
 1438 0074 4FF4FA71 	 mov r1,#500
 1439 0078 FFF7FEFF 	 bl PWM_SetDutyCycle
 372:../main.c     **** 				vTaskDelay( xDelay );
 1440              	 .loc 5 372 0
 1441 007c 1423     	 movs r3,#20
 1442 007e 1846     	 mov r0,r3
 1443 0080 FFF7FEFF 	 bl vTaskDelay
 373:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,400);
 1444              	 .loc 5 373 0
 1445 0084 2B48     	 ldr r0,.L62+16
 1446 0086 4FF4C871 	 mov r1,#400
 1447 008a FFF7FEFF 	 bl PWM_SetDutyCycle
 374:../main.c     **** 				vTaskDelay( xDelay );
 1448              	 .loc 5 374 0
 1449 008e 1423     	 movs r3,#20
 1450 0090 1846     	 mov r0,r3
 1451 0092 FFF7FEFF 	 bl vTaskDelay
 375:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,300);
 1452              	 .loc 5 375 0
 1453 0096 2748     	 ldr r0,.L62+16
 1454 0098 4FF49671 	 mov r1,#300
 1455 009c FFF7FEFF 	 bl PWM_SetDutyCycle
 376:../main.c     **** 				vTaskDelay( xDelay );
 1456              	 .loc 5 376 0
 1457 00a0 1423     	 movs r3,#20
 1458 00a2 1846     	 mov r0,r3
 1459 00a4 FFF7FEFF 	 bl vTaskDelay
 377:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,200);
 1460              	 .loc 5 377 0
 1461 00a8 2248     	 ldr r0,.L62+16
 1462 00aa C821     	 movs r1,#200
 1463 00ac FFF7FEFF 	 bl PWM_SetDutyCycle
 1464 00b0 36E0     	 b .L59
 1465              	.L60:
 378:../main.c     **** 
 379:../main.c     **** 		     }
 380:../main.c     **** 
 381:../main.c     **** 		     else
 382:../main.c     **** 		     {
 383:../main.c     **** 		    	 BUS_IO_Write(&LED_BUS_IO, red_led);	//LED INDICATOR
 1466              	 .loc 5 383 0
 1467 00b2 0023     	 movs r3,#0
 1468 00b4 1E48     	 ldr r0,.L62+12
 1469 00b6 1946     	 mov r1,r3
 1470 00b8 FFF7FEFF 	 bl BUS_IO_Write
 384:../main.c     **** 				// sets the duty to 10 %.
 385:../main.c     **** 				// NON-metal
 386:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,400);
 1471              	 .loc 5 386 0
 1472 00bc 1D48     	 ldr r0,.L62+16
 1473 00be 4FF4C871 	 mov r1,#400
 1474 00c2 FFF7FEFF 	 bl PWM_SetDutyCycle
 387:../main.c     **** 				vTaskDelay( xDelay );
 1475              	 .loc 5 387 0
 1476 00c6 1423     	 movs r3,#20
 1477 00c8 1846     	 mov r0,r3
 1478 00ca FFF7FEFF 	 bl vTaskDelay
 388:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,500);
 1479              	 .loc 5 388 0
 1480 00ce 1948     	 ldr r0,.L62+16
 1481 00d0 4FF4FA71 	 mov r1,#500
 1482 00d4 FFF7FEFF 	 bl PWM_SetDutyCycle
 389:../main.c     **** 				vTaskDelay( xDelay );
 1483              	 .loc 5 389 0
 1484 00d8 1423     	 movs r3,#20
 1485 00da 1846     	 mov r0,r3
 1486 00dc FFF7FEFF 	 bl vTaskDelay
 390:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,600);
 1487              	 .loc 5 390 0
 1488 00e0 1448     	 ldr r0,.L62+16
 1489 00e2 4FF41671 	 mov r1,#600
 1490 00e6 FFF7FEFF 	 bl PWM_SetDutyCycle
 391:../main.c     **** 				vTaskDelay( xDelay );
 1491              	 .loc 5 391 0
 1492 00ea 1423     	 movs r3,#20
 1493 00ec 1846     	 mov r0,r3
 1494 00ee FFF7FEFF 	 bl vTaskDelay
 392:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,700);
 1495              	 .loc 5 392 0
 1496 00f2 1048     	 ldr r0,.L62+16
 1497 00f4 4FF42F71 	 mov r1,#700
 1498 00f8 FFF7FEFF 	 bl PWM_SetDutyCycle
 393:../main.c     **** 				vTaskDelay( xDelay );
 1499              	 .loc 5 393 0
 1500 00fc 1423     	 movs r3,#20
 1501 00fe 1846     	 mov r0,r3
 1502 0100 FFF7FEFF 	 bl vTaskDelay
 394:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,800);
 1503              	 .loc 5 394 0
 1504 0104 0B48     	 ldr r0,.L62+16
 1505 0106 4FF44871 	 mov r1,#800
 1506 010a FFF7FEFF 	 bl PWM_SetDutyCycle
 395:../main.c     **** 				vTaskDelay( xDelay );
 1507              	 .loc 5 395 0
 1508 010e 1423     	 movs r3,#20
 1509 0110 1846     	 mov r0,r3
 1510 0112 FFF7FEFF 	 bl vTaskDelay
 396:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,900);
 1511              	 .loc 5 396 0
 1512 0116 0748     	 ldr r0,.L62+16
 1513 0118 4FF46171 	 mov r1,#900
 1514 011c FFF7FEFF 	 bl PWM_SetDutyCycle
 1515              	.L59:
 397:../main.c     **** 
 398:../main.c     **** 		     }
 399:../main.c     **** 		}
 400:../main.c     **** 	}
 1516              	 .loc 5 400 0
 1517 0120 72E7     	 b .L61
 1518              	.L63:
 1519 0122 00BF     	 .align 2
 1520              	.L62:
 1521 0124 00000000 	 .word ROTATE_interruptSemaphore
 1522 0128 00000000 	 .word ROTATE_INTERRUPT
 1523 012c 00000000 	 .word pin_status
 1524 0130 00000000 	 .word LED_BUS_IO
 1525 0134 00000000 	 .word PWM_ROTATE
 1526              	 .cfi_endproc
 1527              	.LFE376:
 1529              	 .section .text.DIRECTION_Task,"ax",%progbits
 1530              	 .align 2
 1531              	 .global DIRECTION_Task
 1532              	 .thumb
 1533              	 .thumb_func
 1535              	DIRECTION_Task:
 1536              	.LFB377:
 401:../main.c     **** }
 402:../main.c     **** 
 403:../main.c     **** void DIRECTION_Task(void *p){
 1537              	 .loc 5 403 0
 1538              	 .cfi_startproc
 1539              	 
 1540              	 
 1541 0000 80B5     	 push {r7,lr}
 1542              	.LCFI66:
 1543              	 .cfi_def_cfa_offset 8
 1544              	 .cfi_offset 7,-8
 1545              	 .cfi_offset 14,-4
 1546 0002 82B0     	 sub sp,sp,#8
 1547              	.LCFI67:
 1548              	 .cfi_def_cfa_offset 16
 1549 0004 00AF     	 add r7,sp,#0
 1550              	.LCFI68:
 1551              	 .cfi_def_cfa_register 7
 1552 0006 7860     	 str r0,[r7,#4]
 1553              	.L71:
 404:../main.c     **** 
 405:../main.c     **** 	while(1){
 406:../main.c     **** 
 407:../main.c     **** 		if (xSemaphoreTake(DIRECTION_interruptSemaphore, portMAX_DELAY) == pdPASS){
 1554              	 .loc 5 407 0
 1555 0008 1F4B     	 ldr r3,.L72
 1556 000a 1B68     	 ldr r3,[r3]
 1557 000c 1846     	 mov r0,r3
 1558 000e 4FF0FF31 	 mov r1,#-1
 1559 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 1560 0016 0346     	 mov r3,r0
 1561 0018 012B     	 cmp r3,#1
 1562 001a 33D1     	 bne .L65
 408:../main.c     **** 
 409:../main.c     **** 			direction_status = BUS_IO_Read(&DIRECTION_BUS_IO);
 1563              	 .loc 5 409 0
 1564 001c 1B48     	 ldr r0,.L72+4
 1565 001e FFF7FEFF 	 bl BUS_IO_Read
 1566 0022 0346     	 mov r3,r0
 1567 0024 1A46     	 mov r2,r3
 1568 0026 1A4B     	 ldr r3,.L72+8
 1569 0028 1A80     	 strh r2,[r3]
 410:../main.c     **** 
 411:../main.c     **** 			switch(direction_status){
 1570              	 .loc 5 411 0
 1571 002a 194B     	 ldr r3,.L72+8
 1572 002c 1B88     	 ldrh r3,[r3]
 1573 002e 9BB2     	 uxth r3,r3
 1574 0030 032B     	 cmp r3,#3
 1575 0032 E9D8     	 bhi .L71
 1576 0034 01A2     	 adr r2,.L67
 1577 0036 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1578 003a 00BF     	 .p2align 2
 1579              	.L67:
 1580 003c 4D000000 	 .word .L66+1
 1581 0040 5B000000 	 .word .L68+1
 1582 0044 69000000 	 .word .L69+1
 1583 0048 77000000 	 .word .L70+1
 1584              	 .p2align 1
 1585              	.L66:
 412:../main.c     **** 
 413:../main.c     **** 			case 0:
 414:../main.c     **** 				xSemaphoreGiveFromISR(FORWARD_interruptSemaphore, NULL);
 1586              	 .loc 5 414 0
 1587 004c 114B     	 ldr r3,.L72+12
 1588 004e 1B68     	 ldr r3,[r3]
 1589 0050 1846     	 mov r0,r3
 1590 0052 0021     	 movs r1,#0
 1591 0054 FFF7FEFF 	 bl xQueueGiveFromISR
 415:../main.c     **** 				break;
 1592              	 .loc 5 415 0
 1593 0058 14E0     	 b .L65
 1594              	.L68:
 416:../main.c     **** 
 417:../main.c     **** 			case 1:
 418:../main.c     **** 				xSemaphoreGiveFromISR(BACKWARD_interruptSemaphore, NULL);
 1595              	 .loc 5 418 0
 1596 005a 0F4B     	 ldr r3,.L72+16
 1597 005c 1B68     	 ldr r3,[r3]
 1598 005e 1846     	 mov r0,r3
 1599 0060 0021     	 movs r1,#0
 1600 0062 FFF7FEFF 	 bl xQueueGiveFromISR
 419:../main.c     **** 				break;
 1601              	 .loc 5 419 0
 1602 0066 0DE0     	 b .L65
 1603              	.L69:
 420:../main.c     **** 
 421:../main.c     **** 			case 2:
 422:../main.c     **** 				xSemaphoreGiveFromISR(LEFT_interruptSemaphore, NULL);
 1604              	 .loc 5 422 0
 1605 0068 0C4B     	 ldr r3,.L72+20
 1606 006a 1B68     	 ldr r3,[r3]
 1607 006c 1846     	 mov r0,r3
 1608 006e 0021     	 movs r1,#0
 1609 0070 FFF7FEFF 	 bl xQueueGiveFromISR
 423:../main.c     **** 				break;
 1610              	 .loc 5 423 0
 1611 0074 06E0     	 b .L65
 1612              	.L70:
 424:../main.c     **** 
 425:../main.c     **** 			case 3:
 426:../main.c     **** 				xSemaphoreGiveFromISR(RIGHT_interruptSemaphore, NULL);
 1613              	 .loc 5 426 0
 1614 0076 0A4B     	 ldr r3,.L72+24
 1615 0078 1B68     	 ldr r3,[r3]
 1616 007a 1846     	 mov r0,r3
 1617 007c 0021     	 movs r1,#0
 1618 007e FFF7FEFF 	 bl xQueueGiveFromISR
 427:../main.c     **** 				break;
 1619              	 .loc 5 427 0
 1620 0082 00BF     	 nop
 1621              	.L65:
 428:../main.c     **** 
 429:../main.c     **** 			}
 430:../main.c     **** 		}
 431:../main.c     **** 	}
 1622              	 .loc 5 431 0
 1623 0084 C0E7     	 b .L71
 1624              	.L73:
 1625 0086 00BF     	 .align 2
 1626              	.L72:
 1627 0088 00000000 	 .word DIRECTION_interruptSemaphore
 1628 008c 00000000 	 .word DIRECTION_BUS_IO
 1629 0090 00000000 	 .word direction_status
 1630 0094 00000000 	 .word FORWARD_interruptSemaphore
 1631 0098 00000000 	 .word BACKWARD_interruptSemaphore
 1632 009c 00000000 	 .word LEFT_interruptSemaphore
 1633 00a0 00000000 	 .word RIGHT_interruptSemaphore
 1634              	 .cfi_endproc
 1635              	.LFE377:
 1637              	 .section .text.CLAMP_Task,"ax",%progbits
 1638              	 .align 2
 1639              	 .global CLAMP_Task
 1640              	 .thumb
 1641              	 .thumb_func
 1643              	CLAMP_Task:
 1644              	.LFB378:
 432:../main.c     **** }
 433:../main.c     **** 
 434:../main.c     **** void CLAMP_Task(void *p){
 1645              	 .loc 5 434 0
 1646              	 .cfi_startproc
 1647              	 
 1648              	 
 1649 0000 80B5     	 push {r7,lr}
 1650              	.LCFI69:
 1651              	 .cfi_def_cfa_offset 8
 1652              	 .cfi_offset 7,-8
 1653              	 .cfi_offset 14,-4
 1654 0002 82B0     	 sub sp,sp,#8
 1655              	.LCFI70:
 1656              	 .cfi_def_cfa_offset 16
 1657 0004 00AF     	 add r7,sp,#0
 1658              	.LCFI71:
 1659              	 .cfi_def_cfa_register 7
 1660 0006 7860     	 str r0,[r7,#4]
 1661              	.L81:
 435:../main.c     **** 
 436:../main.c     **** 	while(1){
 437:../main.c     **** 
 438:../main.c     **** 		if (xSemaphoreTake(CLAMP_interruptSemaphore, portMAX_DELAY) == pdPASS){
 1662              	 .loc 5 438 0
 1663 0008 1F4B     	 ldr r3,.L82
 1664 000a 1B68     	 ldr r3,[r3]
 1665 000c 1846     	 mov r0,r3
 1666 000e 4FF0FF31 	 mov r1,#-1
 1667 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 1668 0016 0346     	 mov r3,r0
 1669 0018 012B     	 cmp r3,#1
 1670 001a 33D1     	 bne .L75
 439:../main.c     **** 
 440:../main.c     **** 			clamp_status = BUS_IO_Read(&CLAMP_BUS_IO);
 1671              	 .loc 5 440 0
 1672 001c 1B48     	 ldr r0,.L82+4
 1673 001e FFF7FEFF 	 bl BUS_IO_Read
 1674 0022 0346     	 mov r3,r0
 1675 0024 1A46     	 mov r2,r3
 1676 0026 1A4B     	 ldr r3,.L82+8
 1677 0028 1A80     	 strh r2,[r3]
 441:../main.c     **** 
 442:../main.c     **** 			switch(clamp_status){
 1678              	 .loc 5 442 0
 1679 002a 194B     	 ldr r3,.L82+8
 1680 002c 1B88     	 ldrh r3,[r3]
 1681 002e 9BB2     	 uxth r3,r3
 1682 0030 032B     	 cmp r3,#3
 1683 0032 E9D8     	 bhi .L81
 1684 0034 01A2     	 adr r2,.L77
 1685 0036 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1686 003a 00BF     	 .p2align 2
 1687              	.L77:
 1688 003c 4D000000 	 .word .L76+1
 1689 0040 5B000000 	 .word .L78+1
 1690 0044 69000000 	 .word .L79+1
 1691 0048 77000000 	 .word .L80+1
 1692              	 .p2align 1
 1693              	.L76:
 443:../main.c     **** 
 444:../main.c     **** 			case 0:
 445:../main.c     **** 				xSemaphoreGiveFromISR(UP_interruptSemaphore, NULL);
 1694              	 .loc 5 445 0
 1695 004c 114B     	 ldr r3,.L82+12
 1696 004e 1B68     	 ldr r3,[r3]
 1697 0050 1846     	 mov r0,r3
 1698 0052 0021     	 movs r1,#0
 1699 0054 FFF7FEFF 	 bl xQueueGiveFromISR
 446:../main.c     **** 				break;
 1700              	 .loc 5 446 0
 1701 0058 14E0     	 b .L75
 1702              	.L78:
 447:../main.c     **** 
 448:../main.c     **** 			case 1:
 449:../main.c     **** 				xSemaphoreGiveFromISR(DOWN_interruptSemaphore, NULL);
 1703              	 .loc 5 449 0
 1704 005a 0F4B     	 ldr r3,.L82+16
 1705 005c 1B68     	 ldr r3,[r3]
 1706 005e 1846     	 mov r0,r3
 1707 0060 0021     	 movs r1,#0
 1708 0062 FFF7FEFF 	 bl xQueueGiveFromISR
 450:../main.c     **** 				break;
 1709              	 .loc 5 450 0
 1710 0066 0DE0     	 b .L75
 1711              	.L79:
 451:../main.c     **** 
 452:../main.c     **** 			case 2:
 453:../main.c     **** 				xSemaphoreGiveFromISR(OPEN_interruptSemaphore, NULL);
 1712              	 .loc 5 453 0
 1713 0068 0C4B     	 ldr r3,.L82+20
 1714 006a 1B68     	 ldr r3,[r3]
 1715 006c 1846     	 mov r0,r3
 1716 006e 0021     	 movs r1,#0
 1717 0070 FFF7FEFF 	 bl xQueueGiveFromISR
 454:../main.c     **** 				break;
 1718              	 .loc 5 454 0
 1719 0074 06E0     	 b .L75
 1720              	.L80:
 455:../main.c     **** 
 456:../main.c     **** 			case 3:
 457:../main.c     **** 				xSemaphoreGiveFromISR(CLOSE_interruptSemaphore, NULL);
 1721              	 .loc 5 457 0
 1722 0076 0A4B     	 ldr r3,.L82+24
 1723 0078 1B68     	 ldr r3,[r3]
 1724 007a 1846     	 mov r0,r3
 1725 007c 0021     	 movs r1,#0
 1726 007e FFF7FEFF 	 bl xQueueGiveFromISR
 458:../main.c     **** 				break;
 1727              	 .loc 5 458 0
 1728 0082 00BF     	 nop
 1729              	.L75:
 459:../main.c     **** 
 460:../main.c     **** 			}
 461:../main.c     **** 		}
 462:../main.c     **** 	}
 1730              	 .loc 5 462 0
 1731 0084 C0E7     	 b .L81
 1732              	.L83:
 1733 0086 00BF     	 .align 2
 1734              	.L82:
 1735 0088 00000000 	 .word CLAMP_interruptSemaphore
 1736 008c 00000000 	 .word CLAMP_BUS_IO
 1737 0090 00000000 	 .word clamp_status
 1738 0094 00000000 	 .word UP_interruptSemaphore
 1739 0098 00000000 	 .word DOWN_interruptSemaphore
 1740 009c 00000000 	 .word OPEN_interruptSemaphore
 1741 00a0 00000000 	 .word CLOSE_interruptSemaphore
 1742              	 .cfi_endproc
 1743              	.LFE378:
 1745              	 .section .rodata
 1746              	 .align 2
 1747              	.LC0:
 1748 0000 464F5257 	 .ascii "FORWARD\000"
 1748      41524400 
 1749              	 .align 2
 1750              	.LC1:
 1751 0008 4241434B 	 .ascii "BACKWARD\000"
 1751      57415244 
 1751      00
 1752 0011 000000   	 .align 2
 1753              	.LC2:
 1754 0014 4C454654 	 .ascii "LEFT\000"
 1754      00
 1755 0019 000000   	 .align 2
 1756              	.LC3:
 1757 001c 52494748 	 .ascii "RIGHT\000"
 1757      5400
 1758 0022 0000     	 .align 2
 1759              	.LC4:
 1760 0024 555000   	 .ascii "UP\000"
 1761 0027 00       	 .align 2
 1762              	.LC5:
 1763 0028 444F574E 	 .ascii "DOWN\000"
 1763      00
 1764 002d 000000   	 .align 2
 1765              	.LC6:
 1766 0030 4F50454E 	 .ascii "OPEN\000"
 1766      00
 1767 0035 000000   	 .align 2
 1768              	.LC7:
 1769 0038 434C4F53 	 .ascii "CLOSE\000"
 1769      4500
 1770 003e 0000     	 .align 2
 1771              	.LC8:
 1772 0040 524F5441 	 .ascii "ROTATE\000"
 1772      544500
 1773 0047 00       	 .align 2
 1774              	.LC9:
 1775 0048 44495245 	 .ascii "DIRECTION\000"
 1775      4354494F 
 1775      4E00
 1776 0052 0000     	 .align 2
 1777              	.LC10:
 1778 0054 434C414D 	 .ascii "CLAMP\000"
 1778      5000
 1779 005a 0000     	 .section .text.main,"ax",%progbits
 1780              	 .align 2
 1781              	 .global main
 1782              	 .thumb
 1783              	 .thumb_func
 1785              	main:
 1786              	.LFB379:
 463:../main.c     **** }
 464:../main.c     **** 
 465:../main.c     **** int main(void)
 466:../main.c     **** {
 1787              	 .loc 5 466 0
 1788              	 .cfi_startproc
 1789              	 
 1790              	 
 1791 0000 80B5     	 push {r7,lr}
 1792              	.LCFI72:
 1793              	 .cfi_def_cfa_offset 8
 1794              	 .cfi_offset 7,-8
 1795              	 .cfi_offset 14,-4
 1796 0002 84B0     	 sub sp,sp,#16
 1797              	.LCFI73:
 1798              	 .cfi_def_cfa_offset 24
 1799 0004 02AF     	 add r7,sp,#8
 1800              	.LCFI74:
 1801              	 .cfi_def_cfa 7,16
 467:../main.c     ****   DAVE_STATUS_t status;
 468:../main.c     **** 
 469:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 1802              	 .loc 5 469 0
 1803 0006 FFF7FEFF 	 bl DAVE_Init
 1804 000a 0346     	 mov r3,r0
 1805 000c FB71     	 strb r3,[r7,#7]
 470:../main.c     **** 
 471:../main.c     ****   if(status != DAVE_STATUS_SUCCESS)
 1806              	 .loc 5 471 0
 1807 000e FB79     	 ldrb r3,[r7,#7]
 1808 0010 002B     	 cmp r3,#0
 1809 0012 00D0     	 beq .L85
 1810              	.L86:
 472:../main.c     ****   {
 473:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
 474:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
 475:../main.c     **** 
 476:../main.c     ****     while(1U)
 477:../main.c     ****     {
 478:../main.c     **** 
 479:../main.c     ****     }
 1811              	 .loc 5 479 0 discriminator 1
 1812 0014 FEE7     	 b .L86
 1813              	.L85:
 480:../main.c     ****   }
 481:../main.c     **** 
 482:../main.c     **** 	// LIFT DOWN
 483:../main.c     **** 	 PWM_SetDutyCycle(&PWM_LIFT,900);
 1814              	 .loc 5 483 0
 1815 0016 6E48     	 ldr r0,.L88
 1816 0018 4FF46171 	 mov r1,#900
 1817 001c FFF7FEFF 	 bl PWM_SetDutyCycle
 484:../main.c     **** 	 PWM_SetDutyCycle(&PWM_ROTATE,200);
 1818              	 .loc 5 484 0
 1819 0020 6C48     	 ldr r0,.L88+4
 1820 0022 C821     	 movs r1,#200
 1821 0024 FFF7FEFF 	 bl PWM_SetDutyCycle
 485:../main.c     **** 
 486:../main.c     **** 	 BUS_IO_Write(&LED_BUS_IO, red_led);	//LED INDICATOR
 1822              	 .loc 5 486 0
 1823 0028 0023     	 movs r3,#0
 1824 002a 6B48     	 ldr r0,.L88+8
 1825 002c 1946     	 mov r1,r3
 1826 002e FFF7FEFF 	 bl BUS_IO_Write
 487:../main.c     **** 	 DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 1827              	 .loc 5 487 0
 1828 0032 6A48     	 ldr r0,.L88+12
 1829 0034 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 488:../main.c     **** 
 489:../main.c     **** 
 490:../main.c     **** 	// ENABLE DC Motor Shield
 491:../main.c     **** 	TLE94112EL_Enable(&TLE94112EL_0);
 1830              	 .loc 5 491 0
 1831 0038 6948     	 ldr r0,.L88+16
 1832 003a FFF7FEFF 	 bl TLE94112EL_Enable
 492:../main.c     **** 
 493:../main.c     **** 	// Initialize the FreeRTOS
 494:../main.c     **** 	xTaskCreate(FORWARD_Task, "FORWARD", 200, NULL, tskIDLE_PRIORITY, &FORWARD_Handle);
 1833              	 .loc 5 494 0
 1834 003e 0023     	 movs r3,#0
 1835 0040 0093     	 str r3,[sp]
 1836 0042 684B     	 ldr r3,.L88+20
 1837 0044 0193     	 str r3,[sp,#4]
 1838 0046 6848     	 ldr r0,.L88+24
 1839 0048 6849     	 ldr r1,.L88+28
 1840 004a C822     	 movs r2,#200
 1841 004c 0023     	 movs r3,#0
 1842 004e FFF7FEFF 	 bl xTaskCreate
 495:../main.c     **** 	xTaskCreate(BACKWARD_Task, "BACKWARD", 200, NULL, tskIDLE_PRIORITY, &BACKWARD_Handle);
 1843              	 .loc 5 495 0
 1844 0052 0023     	 movs r3,#0
 1845 0054 0093     	 str r3,[sp]
 1846 0056 664B     	 ldr r3,.L88+32
 1847 0058 0193     	 str r3,[sp,#4]
 1848 005a 6648     	 ldr r0,.L88+36
 1849 005c 6649     	 ldr r1,.L88+40
 1850 005e C822     	 movs r2,#200
 1851 0060 0023     	 movs r3,#0
 1852 0062 FFF7FEFF 	 bl xTaskCreate
 496:../main.c     **** 	xTaskCreate(LEFT_Task, "LEFT", 200, NULL, tskIDLE_PRIORITY, &LEFT_Handle);
 1853              	 .loc 5 496 0
 1854 0066 0023     	 movs r3,#0
 1855 0068 0093     	 str r3,[sp]
 1856 006a 644B     	 ldr r3,.L88+44
 1857 006c 0193     	 str r3,[sp,#4]
 1858 006e 6448     	 ldr r0,.L88+48
 1859 0070 6449     	 ldr r1,.L88+52
 1860 0072 C822     	 movs r2,#200
 1861 0074 0023     	 movs r3,#0
 1862 0076 FFF7FEFF 	 bl xTaskCreate
 497:../main.c     **** 	xTaskCreate(RIGHT_Task, "RIGHT", 200, NULL, tskIDLE_PRIORITY, &RIGHT_Handle);
 1863              	 .loc 5 497 0
 1864 007a 0023     	 movs r3,#0
 1865 007c 0093     	 str r3,[sp]
 1866 007e 624B     	 ldr r3,.L88+56
 1867 0080 0193     	 str r3,[sp,#4]
 1868 0082 6248     	 ldr r0,.L88+60
 1869 0084 6249     	 ldr r1,.L88+64
 1870 0086 C822     	 movs r2,#200
 1871 0088 0023     	 movs r3,#0
 1872 008a FFF7FEFF 	 bl xTaskCreate
 498:../main.c     **** 
 499:../main.c     **** 	xTaskCreate(UP_Task, "UP", 200, NULL, tskIDLE_PRIORITY, &UP_Handle);
 1873              	 .loc 5 499 0
 1874 008e 0023     	 movs r3,#0
 1875 0090 0093     	 str r3,[sp]
 1876 0092 604B     	 ldr r3,.L88+68
 1877 0094 0193     	 str r3,[sp,#4]
 1878 0096 6048     	 ldr r0,.L88+72
 1879 0098 6049     	 ldr r1,.L88+76
 1880 009a C822     	 movs r2,#200
 1881 009c 0023     	 movs r3,#0
 1882 009e FFF7FEFF 	 bl xTaskCreate
 500:../main.c     **** 	xTaskCreate(DOWN_Task, "DOWN", 200, NULL, tskIDLE_PRIORITY, &DOWN_Handle);
 1883              	 .loc 5 500 0
 1884 00a2 0023     	 movs r3,#0
 1885 00a4 0093     	 str r3,[sp]
 1886 00a6 5E4B     	 ldr r3,.L88+80
 1887 00a8 0193     	 str r3,[sp,#4]
 1888 00aa 5E48     	 ldr r0,.L88+84
 1889 00ac 5E49     	 ldr r1,.L88+88
 1890 00ae C822     	 movs r2,#200
 1891 00b0 0023     	 movs r3,#0
 1892 00b2 FFF7FEFF 	 bl xTaskCreate
 501:../main.c     **** 	xTaskCreate(OPEN_Task, "OPEN", 200, NULL, tskIDLE_PRIORITY, &OPEN_Handle);
 1893              	 .loc 5 501 0
 1894 00b6 0023     	 movs r3,#0
 1895 00b8 0093     	 str r3,[sp]
 1896 00ba 5C4B     	 ldr r3,.L88+92
 1897 00bc 0193     	 str r3,[sp,#4]
 1898 00be 5C48     	 ldr r0,.L88+96
 1899 00c0 5C49     	 ldr r1,.L88+100
 1900 00c2 C822     	 movs r2,#200
 1901 00c4 0023     	 movs r3,#0
 1902 00c6 FFF7FEFF 	 bl xTaskCreate
 502:../main.c     **** 	xTaskCreate(CLOSE_Task, "CLOSE", 200, NULL, tskIDLE_PRIORITY, &CLOSE_Handle);
 1903              	 .loc 5 502 0
 1904 00ca 0023     	 movs r3,#0
 1905 00cc 0093     	 str r3,[sp]
 1906 00ce 5A4B     	 ldr r3,.L88+104
 1907 00d0 0193     	 str r3,[sp,#4]
 1908 00d2 5A48     	 ldr r0,.L88+108
 1909 00d4 5A49     	 ldr r1,.L88+112
 1910 00d6 C822     	 movs r2,#200
 1911 00d8 0023     	 movs r3,#0
 1912 00da FFF7FEFF 	 bl xTaskCreate
 503:../main.c     **** 
 504:../main.c     **** 	xTaskCreate(ROTATE_Task, "ROTATE", 200, NULL, tskIDLE_PRIORITY, &ROTATE_Handle);
 1913              	 .loc 5 504 0
 1914 00de 0023     	 movs r3,#0
 1915 00e0 0093     	 str r3,[sp]
 1916 00e2 584B     	 ldr r3,.L88+116
 1917 00e4 0193     	 str r3,[sp,#4]
 1918 00e6 5848     	 ldr r0,.L88+120
 1919 00e8 5849     	 ldr r1,.L88+124
 1920 00ea C822     	 movs r2,#200
 1921 00ec 0023     	 movs r3,#0
 1922 00ee FFF7FEFF 	 bl xTaskCreate
 505:../main.c     **** 	xTaskCreate(DIRECTION_Task, "DIRECTION", 200, NULL, tskIDLE_PRIORITY, &DIRECTION_Handle);
 1923              	 .loc 5 505 0
 1924 00f2 0023     	 movs r3,#0
 1925 00f4 0093     	 str r3,[sp]
 1926 00f6 564B     	 ldr r3,.L88+128
 1927 00f8 0193     	 str r3,[sp,#4]
 1928 00fa 5648     	 ldr r0,.L88+132
 1929 00fc 5649     	 ldr r1,.L88+136
 1930 00fe C822     	 movs r2,#200
 1931 0100 0023     	 movs r3,#0
 1932 0102 FFF7FEFF 	 bl xTaskCreate
 506:../main.c     **** 	xTaskCreate(CLAMP_Task, "CLAMP", 200, NULL, tskIDLE_PRIORITY, &CLAMP_Handle);
 1933              	 .loc 5 506 0
 1934 0106 0023     	 movs r3,#0
 1935 0108 0093     	 str r3,[sp]
 1936 010a 544B     	 ldr r3,.L88+140
 1937 010c 0193     	 str r3,[sp,#4]
 1938 010e 5448     	 ldr r0,.L88+144
 1939 0110 5449     	 ldr r1,.L88+148
 1940 0112 C822     	 movs r2,#200
 1941 0114 0023     	 movs r3,#0
 1942 0116 FFF7FEFF 	 bl xTaskCreate
 507:../main.c     **** 
 508:../main.c     **** 
 509:../main.c     **** 	FORWARD_interruptSemaphore = xSemaphoreCreateBinary();
 1943              	 .loc 5 509 0
 1944 011a 0120     	 movs r0,#1
 1945 011c 0021     	 movs r1,#0
 1946 011e 0322     	 movs r2,#3
 1947 0120 FFF7FEFF 	 bl xQueueGenericCreate
 1948 0124 0246     	 mov r2,r0
 1949 0126 504B     	 ldr r3,.L88+152
 1950 0128 1A60     	 str r2,[r3]
 510:../main.c     **** 	BACKWARD_interruptSemaphore = xSemaphoreCreateBinary();
 1951              	 .loc 5 510 0
 1952 012a 0120     	 movs r0,#1
 1953 012c 0021     	 movs r1,#0
 1954 012e 0322     	 movs r2,#3
 1955 0130 FFF7FEFF 	 bl xQueueGenericCreate
 1956 0134 0246     	 mov r2,r0
 1957 0136 4D4B     	 ldr r3,.L88+156
 1958 0138 1A60     	 str r2,[r3]
 511:../main.c     **** 	LEFT_interruptSemaphore = xSemaphoreCreateBinary();
 1959              	 .loc 5 511 0
 1960 013a 0120     	 movs r0,#1
 1961 013c 0021     	 movs r1,#0
 1962 013e 0322     	 movs r2,#3
 1963 0140 FFF7FEFF 	 bl xQueueGenericCreate
 1964 0144 0246     	 mov r2,r0
 1965 0146 4A4B     	 ldr r3,.L88+160
 1966 0148 1A60     	 str r2,[r3]
 512:../main.c     **** 	RIGHT_interruptSemaphore = xSemaphoreCreateBinary();
 1967              	 .loc 5 512 0
 1968 014a 0120     	 movs r0,#1
 1969 014c 0021     	 movs r1,#0
 1970 014e 0322     	 movs r2,#3
 1971 0150 FFF7FEFF 	 bl xQueueGenericCreate
 1972 0154 0246     	 mov r2,r0
 1973 0156 474B     	 ldr r3,.L88+164
 1974 0158 1A60     	 str r2,[r3]
 513:../main.c     **** 
 514:../main.c     **** 	UP_interruptSemaphore = xSemaphoreCreateBinary();
 1975              	 .loc 5 514 0
 1976 015a 0120     	 movs r0,#1
 1977 015c 0021     	 movs r1,#0
 1978 015e 0322     	 movs r2,#3
 1979 0160 FFF7FEFF 	 bl xQueueGenericCreate
 1980 0164 0246     	 mov r2,r0
 1981 0166 444B     	 ldr r3,.L88+168
 1982 0168 1A60     	 str r2,[r3]
 515:../main.c     **** 	DOWN_interruptSemaphore = xSemaphoreCreateBinary();
 1983              	 .loc 5 515 0
 1984 016a 0120     	 movs r0,#1
 1985 016c 0021     	 movs r1,#0
 1986 016e 0322     	 movs r2,#3
 1987 0170 FFF7FEFF 	 bl xQueueGenericCreate
 1988 0174 0246     	 mov r2,r0
 1989 0176 414B     	 ldr r3,.L88+172
 1990 0178 1A60     	 str r2,[r3]
 516:../main.c     **** 	OPEN_interruptSemaphore = xSemaphoreCreateBinary();
 1991              	 .loc 5 516 0
 1992 017a 0120     	 movs r0,#1
 1993 017c 0021     	 movs r1,#0
 1994 017e 0322     	 movs r2,#3
 1995 0180 FFF7FEFF 	 bl xQueueGenericCreate
 1996 0184 0246     	 mov r2,r0
 1997 0186 3E4B     	 ldr r3,.L88+176
 1998 0188 1A60     	 str r2,[r3]
 517:../main.c     **** 	CLOSE_interruptSemaphore = xSemaphoreCreateBinary();
 1999              	 .loc 5 517 0
 2000 018a 0120     	 movs r0,#1
 2001 018c 0021     	 movs r1,#0
 2002 018e 0322     	 movs r2,#3
 2003 0190 FFF7FEFF 	 bl xQueueGenericCreate
 2004 0194 0246     	 mov r2,r0
 2005 0196 3B4B     	 ldr r3,.L88+180
 2006 0198 1A60     	 str r2,[r3]
 518:../main.c     **** 
 519:../main.c     **** 	ROTATE_interruptSemaphore = xSemaphoreCreateBinary();
 2007              	 .loc 5 519 0
 2008 019a 0120     	 movs r0,#1
 2009 019c 0021     	 movs r1,#0
 2010 019e 0322     	 movs r2,#3
 2011 01a0 FFF7FEFF 	 bl xQueueGenericCreate
 2012 01a4 0246     	 mov r2,r0
 2013 01a6 384B     	 ldr r3,.L88+184
 2014 01a8 1A60     	 str r2,[r3]
 520:../main.c     **** 	DIRECTION_interruptSemaphore = xSemaphoreCreateBinary();
 2015              	 .loc 5 520 0
 2016 01aa 0120     	 movs r0,#1
 2017 01ac 0021     	 movs r1,#0
 2018 01ae 0322     	 movs r2,#3
 2019 01b0 FFF7FEFF 	 bl xQueueGenericCreate
 2020 01b4 0246     	 mov r2,r0
 2021 01b6 354B     	 ldr r3,.L88+188
 2022 01b8 1A60     	 str r2,[r3]
 521:../main.c     **** 	CLAMP_interruptSemaphore = xSemaphoreCreateBinary();
 2023              	 .loc 5 521 0
 2024 01ba 0120     	 movs r0,#1
 2025 01bc 0021     	 movs r1,#0
 2026 01be 0322     	 movs r2,#3
 2027 01c0 FFF7FEFF 	 bl xQueueGenericCreate
 2028 01c4 0246     	 mov r2,r0
 2029 01c6 324B     	 ldr r3,.L88+192
 2030 01c8 1A60     	 str r2,[r3]
 522:../main.c     **** 
 523:../main.c     **** 	vTaskStartScheduler();
 2031              	 .loc 5 523 0
 2032 01ca FFF7FEFF 	 bl vTaskStartScheduler
 2033              	.L87:
 524:../main.c     **** 	// Initialize the FreeRTOS
 525:../main.c     **** 
 526:../main.c     **** 
 527:../main.c     **** 
 528:../main.c     **** 
 529:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
 530:../main.c     ****   while(1U)
 531:../main.c     ****   {
 532:../main.c     **** 
 533:../main.c     ****   }
 2034              	 .loc 5 533 0 discriminator 2
 2035 01ce FEE7     	 b .L87
 2036              	.L89:
 2037              	 .align 2
 2038              	.L88:
 2039 01d0 00000000 	 .word PWM_LIFT
 2040 01d4 00000000 	 .word PWM_ROTATE
 2041 01d8 00000000 	 .word LED_BUS_IO
 2042 01dc 00000000 	 .word DIGITAL_IO_0
 2043 01e0 00000000 	 .word TLE94112EL_0
 2044 01e4 00000000 	 .word FORWARD_Handle
 2045 01e8 00000000 	 .word FORWARD_Task
 2046 01ec 00000000 	 .word .LC0
 2047 01f0 00000000 	 .word BACKWARD_Handle
 2048 01f4 00000000 	 .word BACKWARD_Task
 2049 01f8 08000000 	 .word .LC1
 2050 01fc 00000000 	 .word LEFT_Handle
 2051 0200 00000000 	 .word LEFT_Task
 2052 0204 14000000 	 .word .LC2
 2053 0208 00000000 	 .word RIGHT_Handle
 2054 020c 00000000 	 .word RIGHT_Task
 2055 0210 1C000000 	 .word .LC3
 2056 0214 00000000 	 .word UP_Handle
 2057 0218 00000000 	 .word UP_Task
 2058 021c 24000000 	 .word .LC4
 2059 0220 00000000 	 .word DOWN_Handle
 2060 0224 00000000 	 .word DOWN_Task
 2061 0228 28000000 	 .word .LC5
 2062 022c 00000000 	 .word OPEN_Handle
 2063 0230 00000000 	 .word OPEN_Task
 2064 0234 30000000 	 .word .LC6
 2065 0238 00000000 	 .word CLOSE_Handle
 2066 023c 00000000 	 .word CLOSE_Task
 2067 0240 38000000 	 .word .LC7
 2068 0244 00000000 	 .word ROTATE_Handle
 2069 0248 00000000 	 .word ROTATE_Task
 2070 024c 40000000 	 .word .LC8
 2071 0250 00000000 	 .word DIRECTION_Handle
 2072 0254 00000000 	 .word DIRECTION_Task
 2073 0258 48000000 	 .word .LC9
 2074 025c 00000000 	 .word CLAMP_Handle
 2075 0260 00000000 	 .word CLAMP_Task
 2076 0264 54000000 	 .word .LC10
 2077 0268 00000000 	 .word FORWARD_interruptSemaphore
 2078 026c 00000000 	 .word BACKWARD_interruptSemaphore
 2079 0270 00000000 	 .word LEFT_interruptSemaphore
 2080 0274 00000000 	 .word RIGHT_interruptSemaphore
 2081 0278 00000000 	 .word UP_interruptSemaphore
 2082 027c 00000000 	 .word DOWN_interruptSemaphore
 2083 0280 00000000 	 .word OPEN_interruptSemaphore
 2084 0284 00000000 	 .word CLOSE_interruptSemaphore
 2085 0288 00000000 	 .word ROTATE_interruptSemaphore
 2086 028c 00000000 	 .word DIRECTION_interruptSemaphore
 2087 0290 00000000 	 .word CLAMP_interruptSemaphore
 2088              	 .cfi_endproc
 2089              	.LFE379:
 2091              	 .section .text.ERU0_2_IRQHandler,"ax",%progbits
 2092              	 .align 2
 2093              	 .global ERU0_2_IRQHandler
 2094              	 .thumb
 2095              	 .thumb_func
 2097              	ERU0_2_IRQHandler:
 2098              	.LFB380:
 534:../main.c     **** }
 535:../main.c     **** 
 536:../main.c     **** void ROTATE_IRQHandler(void){
 2099              	 .loc 5 536 0
 2100              	 .cfi_startproc
 2101              	 
 2102              	 
 2103 0000 80B5     	 push {r7,lr}
 2104              	.LCFI75:
 2105              	 .cfi_def_cfa_offset 8
 2106              	 .cfi_offset 7,-8
 2107              	 .cfi_offset 14,-4
 2108 0002 00AF     	 add r7,sp,#0
 2109              	.LCFI76:
 2110              	 .cfi_def_cfa_register 7
 537:../main.c     **** 
 538:../main.c     **** 	xSemaphoreGiveFromISR(ROTATE_interruptSemaphore, NULL);
 2111              	 .loc 5 538 0
 2112 0004 034B     	 ldr r3,.L91
 2113 0006 1B68     	 ldr r3,[r3]
 2114 0008 1846     	 mov r0,r3
 2115 000a 0021     	 movs r1,#0
 2116 000c FFF7FEFF 	 bl xQueueGiveFromISR
 539:../main.c     **** }
 2117              	 .loc 5 539 0
 2118 0010 80BD     	 pop {r7,pc}
 2119              	.L92:
 2120 0012 00BF     	 .align 2
 2121              	.L91:
 2122 0014 00000000 	 .word ROTATE_interruptSemaphore
 2123              	 .cfi_endproc
 2124              	.LFE380:
 2126              	 .section .text.ERU0_3_IRQHandler,"ax",%progbits
 2127              	 .align 2
 2128              	 .global ERU0_3_IRQHandler
 2129              	 .thumb
 2130              	 .thumb_func
 2132              	ERU0_3_IRQHandler:
 2133              	.LFB381:
 540:../main.c     **** 
 541:../main.c     **** void DIRECTION_IRQHandler(void){
 2134              	 .loc 5 541 0
 2135              	 .cfi_startproc
 2136              	 
 2137              	 
 2138 0000 80B5     	 push {r7,lr}
 2139              	.LCFI77:
 2140              	 .cfi_def_cfa_offset 8
 2141              	 .cfi_offset 7,-8
 2142              	 .cfi_offset 14,-4
 2143 0002 00AF     	 add r7,sp,#0
 2144              	.LCFI78:
 2145              	 .cfi_def_cfa_register 7
 542:../main.c     **** 
 543:../main.c     **** 	xSemaphoreGiveFromISR(DIRECTION_interruptSemaphore, NULL);
 2146              	 .loc 5 543 0
 2147 0004 034B     	 ldr r3,.L94
 2148 0006 1B68     	 ldr r3,[r3]
 2149 0008 1846     	 mov r0,r3
 2150 000a 0021     	 movs r1,#0
 2151 000c FFF7FEFF 	 bl xQueueGiveFromISR
 544:../main.c     **** }
 2152              	 .loc 5 544 0
 2153 0010 80BD     	 pop {r7,pc}
 2154              	.L95:
 2155 0012 00BF     	 .align 2
 2156              	.L94:
 2157 0014 00000000 	 .word DIRECTION_interruptSemaphore
 2158              	 .cfi_endproc
 2159              	.LFE381:
 2161              	 .section .text.ERU1_0_IRQHandler,"ax",%progbits
 2162              	 .align 2
 2163              	 .global ERU1_0_IRQHandler
 2164              	 .thumb
 2165              	 .thumb_func
 2167              	ERU1_0_IRQHandler:
 2168              	.LFB382:
 545:../main.c     **** 
 546:../main.c     **** void CLAMP_IRQHandler(void){
 2169              	 .loc 5 546 0
 2170              	 .cfi_startproc
 2171              	 
 2172              	 
 2173 0000 80B5     	 push {r7,lr}
 2174              	.LCFI79:
 2175              	 .cfi_def_cfa_offset 8
 2176              	 .cfi_offset 7,-8
 2177              	 .cfi_offset 14,-4
 2178 0002 00AF     	 add r7,sp,#0
 2179              	.LCFI80:
 2180              	 .cfi_def_cfa_register 7
 547:../main.c     **** 
 548:../main.c     **** 	xSemaphoreGiveFromISR(CLAMP_interruptSemaphore, NULL);
 2181              	 .loc 5 548 0
 2182 0004 034B     	 ldr r3,.L97
 2183 0006 1B68     	 ldr r3,[r3]
 2184 0008 1846     	 mov r0,r3
 2185 000a 0021     	 movs r1,#0
 2186 000c FFF7FEFF 	 bl xQueueGiveFromISR
 549:../main.c     **** }
 2187              	 .loc 5 549 0
 2188 0010 80BD     	 pop {r7,pc}
 2189              	.L98:
 2190 0012 00BF     	 .align 2
 2191              	.L97:
 2192 0014 00000000 	 .word CLAMP_interruptSemaphore
 2193              	 .cfi_endproc
 2194              	.LFE382:
 2196              	 .section .text.tle94112el_enable,"ax",%progbits
 2197              	 .align 2
 2198              	 .thumb
 2199              	 .thumb_func
 2201              	tle94112el_enable:
 2202              	.LFB383:
 550:../main.c     **** 
 551:../main.c     **** static void tle94112el_enable(void)
 552:../main.c     **** 
 553:../main.c     **** {
 2203              	 .loc 5 553 0
 2204              	 .cfi_startproc
 2205              	 
 2206              	 
 2207 0000 80B5     	 push {r7,lr}
 2208              	.LCFI81:
 2209              	 .cfi_def_cfa_offset 8
 2210              	 .cfi_offset 7,-8
 2211              	 .cfi_offset 14,-4
 2212 0002 00AF     	 add r7,sp,#0
 2213              	.LCFI82:
 2214              	 .cfi_def_cfa_register 7
 554:../main.c     **** 
 555:../main.c     ****   DIGITAL_IO_SetOutputHigh(&TLE94112_ENABLE);
 2215              	 .loc 5 555 0
 2216 0004 0148     	 ldr r0,.L100
 2217 0006 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 556:../main.c     **** 
 557:../main.c     **** }
 2218              	 .loc 5 557 0
 2219 000a 80BD     	 pop {r7,pc}
 2220              	.L101:
 2221              	 .align 2
 2222              	.L100:
 2223 000c 00000000 	 .word TLE94112_ENABLE
 2224              	 .cfi_endproc
 2225              	.LFE383:
 2227              	 .section .text.tle94112el_disable,"ax",%progbits
 2228              	 .align 2
 2229              	 .thumb
 2230              	 .thumb_func
 2232              	tle94112el_disable:
 2233              	.LFB384:
 558:../main.c     **** 
 559:../main.c     **** static void tle94112el_disable(void)
 560:../main.c     **** 
 561:../main.c     **** {
 2234              	 .loc 5 561 0
 2235              	 .cfi_startproc
 2236              	 
 2237              	 
 2238 0000 80B5     	 push {r7,lr}
 2239              	.LCFI83:
 2240              	 .cfi_def_cfa_offset 8
 2241              	 .cfi_offset 7,-8
 2242              	 .cfi_offset 14,-4
 2243 0002 00AF     	 add r7,sp,#0
 2244              	.LCFI84:
 2245              	 .cfi_def_cfa_register 7
 562:../main.c     **** 
 563:../main.c     ****   DIGITAL_IO_SetOutputLow(&TLE94112_ENABLE);
 2246              	 .loc 5 563 0
 2247 0004 0148     	 ldr r0,.L103
 2248 0006 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 564:../main.c     **** 
 565:../main.c     **** }
 2249              	 .loc 5 565 0
 2250 000a 80BD     	 pop {r7,pc}
 2251              	.L104:
 2252              	 .align 2
 2253              	.L103:
 2254 000c 00000000 	 .word TLE94112_ENABLE
 2255              	 .cfi_endproc
 2256              	.LFE384:
 2258              	 .section .text.tle94112el_spi_transfer,"ax",%progbits
 2259              	 .align 2
 2260              	 .thumb
 2261              	 .thumb_func
 2263              	tle94112el_spi_transfer:
 2264              	.LFB385:
 566:../main.c     **** 
 567:../main.c     **** static int32_t tle94112el_spi_transfer(uint8_t *tx_data, uint8_t *rx_data)
 568:../main.c     **** 
 569:../main.c     **** {
 2265              	 .loc 5 569 0
 2266              	 .cfi_startproc
 2267              	 
 2268              	 
 2269 0000 80B5     	 push {r7,lr}
 2270              	.LCFI85:
 2271              	 .cfi_def_cfa_offset 8
 2272              	 .cfi_offset 7,-8
 2273              	 .cfi_offset 14,-4
 2274 0002 82B0     	 sub sp,sp,#8
 2275              	.LCFI86:
 2276              	 .cfi_def_cfa_offset 16
 2277 0004 00AF     	 add r7,sp,#0
 2278              	.LCFI87:
 2279              	 .cfi_def_cfa_register 7
 2280 0006 7860     	 str r0,[r7,#4]
 2281 0008 3960     	 str r1,[r7]
 570:../main.c     **** 
 571:../main.c     ****   XMC_SPI_CH_SetBitOrderLsbFirst(SPI_MASTER_0.channel);
 2282              	 .loc 5 571 0
 2283 000a 0E4B     	 ldr r3,.L108
 2284 000c 1B68     	 ldr r3,[r3]
 2285 000e 1846     	 mov r0,r3
 2286 0010 FFF7FEFF 	 bl XMC_SPI_CH_SetBitOrderLsbFirst
 572:../main.c     **** 
 573:../main.c     **** 
 574:../main.c     **** 
 575:../main.c     ****   DIGITAL_IO_SetOutputLow(&TLE94112_CS);
 2287              	 .loc 5 575 0
 2288 0014 0C48     	 ldr r0,.L108+4
 2289 0016 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 576:../main.c     **** 
 577:../main.c     **** 
 578:../main.c     **** 
 579:../main.c     ****   SPI_MASTER_Transfer(&SPI_MASTER_0, tx_data, rx_data, 2);
 2290              	 .loc 5 579 0
 2291 001a 0A48     	 ldr r0,.L108
 2292 001c 7968     	 ldr r1,[r7,#4]
 2293 001e 3A68     	 ldr r2,[r7]
 2294 0020 0223     	 movs r3,#2
 2295 0022 FFF7FEFF 	 bl SPI_MASTER_Transfer
 580:../main.c     **** 
 581:../main.c     ****   while(SPI_MASTER_0.runtime->rx_busy);
 2296              	 .loc 5 581 0
 2297 0026 00BF     	 nop
 2298              	.L106:
 2299              	 .loc 5 581 0 is_stmt 0 discriminator 1
 2300 0028 064B     	 ldr r3,.L108
 2301 002a 9B68     	 ldr r3,[r3,#8]
 2302 002c DB7F     	 ldrb r3,[r3,#31]
 2303 002e DBB2     	 uxtb r3,r3
 2304 0030 002B     	 cmp r3,#0
 2305 0032 F9D1     	 bne .L106
 582:../main.c     **** 
 583:../main.c     **** 
 584:../main.c     **** 
 585:../main.c     ****   DIGITAL_IO_SetOutputHigh(&TLE94112_CS);
 2306              	 .loc 5 585 0 is_stmt 1
 2307 0034 0448     	 ldr r0,.L108+4
 2308 0036 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 586:../main.c     **** 
 587:../main.c     ****   return 0;
 2309              	 .loc 5 587 0
 2310 003a 0023     	 movs r3,#0
 588:../main.c     **** 
 589:../main.c     **** }
 2311              	 .loc 5 589 0
 2312 003c 1846     	 mov r0,r3
 2313 003e 0837     	 adds r7,r7,#8
 2314              	.LCFI88:
 2315              	 .cfi_def_cfa_offset 8
 2316 0040 BD46     	 mov sp,r7
 2317              	.LCFI89:
 2318              	 .cfi_def_cfa_register 13
 2319              	 
 2320 0042 80BD     	 pop {r7,pc}
 2321              	.L109:
 2322              	 .align 2
 2323              	.L108:
 2324 0044 00000000 	 .word SPI_MASTER_0
 2325 0048 00000000 	 .word TLE94112_CS
 2326              	 .cfi_endproc
 2327              	.LFE385:
 2329              	 .text
 2330              	.Letext0:
 2331              	 .file 6 "c:\\users\\forge-15r\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2332              	 .file 7 "c:\\users\\forge-15r\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2333              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 2334              	 .file 9 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc/xmc4_scu.h"
 2335              	 .file 10 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc/xmc4_gpio.h"
 2336              	 .file 11 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc/xmc_usic.h"
 2337              	 .file 12 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/SPI_MASTER/spi_master.h"
 2338              	 .file 13 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/FREERTOS/portable/GCC/portmacro.h"
 2339              	 .file 14 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/FREERTOS/task.h"
 2340              	 .file 15 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/FREERTOS/queue.h"
 2341              	 .file 16 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/FREERTOS/semphr.h"
 2342              	 .file 17 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc/xmc_eru.h"
 2343              	 .file 18 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/XMCLib/inc/xmc_ccu4.h"
 2344              	 .file 19 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 2345              	 .file 20 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PWM/pwm.h"
 2346              	 .file 21 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/BUS_IO/bus_io.h"
 2347              	 .file 22 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DAVE.h"
 2348              	 .file 23 "../ext_lib/tle94112el.h"
 2349              	 .file 24 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/CMSIS/Include/cmsis_gcc.h"
 2350              	 .file 25 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/CMSIS/Include/core_cm4.h"
 2351              	 .file 26 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 2352              	 .file 27 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/SPI_MASTER/spi_master_extern.h"
 2353              	 .file 28 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 2354              	 .file 29 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PIN_INTERRUPT/pin_interrupt_extern.h"
 2355              	 .file 30 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/PWM/PWM_Extern.h"
 2356              	 .file 31 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/Garbage_collector/Dave/Generated/BUS_IO/bus_io_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:20     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:24     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:68     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:72     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:115    .text.XMC_GPIO_GetInput:00000000 $t
    {standard input}:119    .text.XMC_GPIO_GetInput:00000000 XMC_GPIO_GetInput
    {standard input}:163    .text.XMC_SPI_CH_SetBitOrderLsbFirst:00000000 $t
    {standard input}:167    .text.XMC_SPI_CH_SetBitOrderLsbFirst:00000000 XMC_SPI_CH_SetBitOrderLsbFirst
    {standard input}:209    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:213    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:253    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:257    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:296    .text.PIN_INTERRUPT_GetPinValue:00000000 $t
    {standard input}:300    .text.PIN_INTERRUPT_GetPinValue:00000000 PIN_INTERRUPT_GetPinValue
                            *COM*:00000002 direction_status
                            *COM*:00000002 clamp_status
                            *COM*:00000004 pin_status
    {standard input}:349    .rodata.green_led:00000000 green_led
    {standard input}:346    .rodata.green_led:00000000 $d
    {standard input}:356    .rodata.red_led:00000000 red_led
    {standard input}:353    .rodata.red_led:00000000 $d
    {standard input}:363    .rodata.xDelay:00000000 xDelay
    {standard input}:360    .rodata.xDelay:00000000 $d
    {standard input}:366    .rodata.TLE94112EL_0:00000000 $d
    {standard input}:369    .rodata.TLE94112EL_0:00000000 TLE94112EL_0
    {standard input}:2201   .text.tle94112el_enable:00000000 tle94112el_enable
    {standard input}:2232   .text.tle94112el_disable:00000000 tle94112el_disable
    {standard input}:2263   .text.tle94112el_spi_transfer:00000000 tle94112el_spi_transfer
    {standard input}:378    .bss.FORWARD_Handle:00000000 FORWARD_Handle
    {standard input}:375    .bss.FORWARD_Handle:00000000 $d
    {standard input}:385    .bss.BACKWARD_Handle:00000000 BACKWARD_Handle
    {standard input}:382    .bss.BACKWARD_Handle:00000000 $d
    {standard input}:392    .bss.LEFT_Handle:00000000 LEFT_Handle
    {standard input}:389    .bss.LEFT_Handle:00000000 $d
    {standard input}:399    .bss.RIGHT_Handle:00000000 RIGHT_Handle
    {standard input}:396    .bss.RIGHT_Handle:00000000 $d
    {standard input}:406    .bss.UP_Handle:00000000 UP_Handle
    {standard input}:403    .bss.UP_Handle:00000000 $d
    {standard input}:413    .bss.DOWN_Handle:00000000 DOWN_Handle
    {standard input}:410    .bss.DOWN_Handle:00000000 $d
    {standard input}:420    .bss.OPEN_Handle:00000000 OPEN_Handle
    {standard input}:417    .bss.OPEN_Handle:00000000 $d
    {standard input}:427    .bss.CLOSE_Handle:00000000 CLOSE_Handle
    {standard input}:424    .bss.CLOSE_Handle:00000000 $d
    {standard input}:434    .bss.ROTATE_Handle:00000000 ROTATE_Handle
    {standard input}:431    .bss.ROTATE_Handle:00000000 $d
    {standard input}:441    .bss.DIRECTION_Handle:00000000 DIRECTION_Handle
    {standard input}:438    .bss.DIRECTION_Handle:00000000 $d
    {standard input}:448    .bss.CLAMP_Handle:00000000 CLAMP_Handle
    {standard input}:445    .bss.CLAMP_Handle:00000000 $d
                            *COM*:00000004 FORWARD_interruptSemaphore
                            *COM*:00000004 BACKWARD_interruptSemaphore
                            *COM*:00000004 LEFT_interruptSemaphore
                            *COM*:00000004 RIGHT_interruptSemaphore
                            *COM*:00000004 UP_interruptSemaphore
                            *COM*:00000004 DOWN_interruptSemaphore
                            *COM*:00000004 OPEN_interruptSemaphore
                            *COM*:00000004 CLOSE_interruptSemaphore
                            *COM*:00000004 ROTATE_interruptSemaphore
                            *COM*:00000004 DIRECTION_interruptSemaphore
                            *COM*:00000004 CLAMP_interruptSemaphore
    {standard input}:462    .text.FORWARD_Task:00000000 $t
    {standard input}:467    .text.FORWARD_Task:00000000 FORWARD_Task
    {standard input}:597    .text.FORWARD_Task:000000d8 $d
    {standard input}:607    .text.BACKWARD_Task:00000000 $t
    {standard input}:612    .text.BACKWARD_Task:00000000 BACKWARD_Task
    {standard input}:741    .text.BACKWARD_Task:000000d8 $d
    {standard input}:751    .text.LEFT_Task:00000000 $t
    {standard input}:756    .text.LEFT_Task:00000000 LEFT_Task
    {standard input}:885    .text.LEFT_Task:000000d8 $d
    {standard input}:895    .text.RIGHT_Task:00000000 $t
    {standard input}:900    .text.RIGHT_Task:00000000 RIGHT_Task
    {standard input}:1029   .text.RIGHT_Task:000000d8 $d
    {standard input}:1039   .text.UP_Task:00000000 $t
    {standard input}:1044   .text.UP_Task:00000000 UP_Task
    {standard input}:1122   .text.UP_Task:00000084 $d
    {standard input}:1128   .text.DOWN_Task:00000000 $t
    {standard input}:1133   .text.DOWN_Task:00000000 DOWN_Task
    {standard input}:1211   .text.DOWN_Task:00000084 $d
    {standard input}:1217   .text.OPEN_Task:00000000 $t
    {standard input}:1222   .text.OPEN_Task:00000000 OPEN_Task
    {standard input}:1282   .text.OPEN_Task:0000004c $d
    {standard input}:1290   .text.CLOSE_Task:00000000 $t
    {standard input}:1295   .text.CLOSE_Task:00000000 CLOSE_Task
    {standard input}:1355   .text.CLOSE_Task:00000050 $d
    {standard input}:1363   .text.ROTATE_Task:00000000 $t
    {standard input}:1368   .text.ROTATE_Task:00000000 ROTATE_Task
    {standard input}:1521   .text.ROTATE_Task:00000124 $d
    {standard input}:1530   .text.DIRECTION_Task:00000000 $t
    {standard input}:1535   .text.DIRECTION_Task:00000000 DIRECTION_Task
    {standard input}:1580   .text.DIRECTION_Task:0000003c $d
    {standard input}:1584   .text.DIRECTION_Task:0000004c $t
    {standard input}:1627   .text.DIRECTION_Task:00000088 $d
    {standard input}:1638   .text.CLAMP_Task:00000000 $t
    {standard input}:1643   .text.CLAMP_Task:00000000 CLAMP_Task
    {standard input}:1688   .text.CLAMP_Task:0000003c $d
    {standard input}:1692   .text.CLAMP_Task:0000004c $t
    {standard input}:1735   .text.CLAMP_Task:00000088 $d
    {standard input}:1746   .rodata:00000000 $d
    {standard input}:1780   .text.main:00000000 $t
    {standard input}:1785   .text.main:00000000 main
    {standard input}:2039   .text.main:000001d0 $d
    {standard input}:2092   .text.ERU0_2_IRQHandler:00000000 $t
    {standard input}:2097   .text.ERU0_2_IRQHandler:00000000 ERU0_2_IRQHandler
    {standard input}:2122   .text.ERU0_2_IRQHandler:00000014 $d
    {standard input}:2127   .text.ERU0_3_IRQHandler:00000000 $t
    {standard input}:2132   .text.ERU0_3_IRQHandler:00000000 ERU0_3_IRQHandler
    {standard input}:2157   .text.ERU0_3_IRQHandler:00000014 $d
    {standard input}:2162   .text.ERU1_0_IRQHandler:00000000 $t
    {standard input}:2167   .text.ERU1_0_IRQHandler:00000000 ERU1_0_IRQHandler
    {standard input}:2192   .text.ERU1_0_IRQHandler:00000014 $d
    {standard input}:2197   .text.tle94112el_enable:00000000 $t
    {standard input}:2223   .text.tle94112el_enable:0000000c $d
    {standard input}:2228   .text.tle94112el_disable:00000000 $t
    {standard input}:2254   .text.tle94112el_disable:0000000c $d
    {standard input}:2259   .text.tle94112el_spi_transfer:00000000 $t
    {standard input}:2324   .text.tle94112el_spi_transfer:00000044 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
xQueueSemaphoreTake
TLE94112EL_SetHBRegdata
vTaskDelay
DIRECTION_INTERRUPT
MOTOR_HIGH
MOTOR_LOW
PWM_SetDutyCycle
PWM_LIFT
CLAMP_INTERRUPT
PWM_CLAMP
BUS_IO_Write
ROTATE_INTERRUPT
LED_BUS_IO
PWM_ROTATE
BUS_IO_Read
xQueueGiveFromISR
DIRECTION_BUS_IO
CLAMP_BUS_IO
DAVE_Init
TLE94112EL_Enable
xTaskCreate
xQueueGenericCreate
vTaskStartScheduler
DIGITAL_IO_0
TLE94112_ENABLE
SPI_MASTER_Transfer
SPI_MASTER_0
TLE94112_CS
